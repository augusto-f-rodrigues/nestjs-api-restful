var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.613,1,1.822]],["body/controllers/AppController.html",[0,2.446,1,2.762,2,1.905,3,0.486,4,0.417,5,0.417,6,2.872,7,0.486,8,1.153,9,4.299,10,2.459,11,0.041,12,3.498,13,0.716,14,3.498,15,0.898,16,1.761,17,1.14,18,0.804,19,2.872,20,2.151,21,2.412,22,2.872,23,0.486,24,0.353,25,2.151,26,1.525,27,3.498,28,1.235,29,3.498,30,0.031,31,0.031]],["title/modules/AppModule.html",[32,1.44,33,1.822]],["body/modules/AppModule.html",[1,2.732,2,2.111,3,0.389,4,0.335,5,0.335,11,0.041,17,1.225,18,0.644,21,2.528,22,2.303,23,0.389,24,0.283,30,0.026,31,0.026,32,1.884,33,3.434,34,1.363,35,1.884,36,2.303,37,2.303,38,2.303,39,2.528,40,2.833,41,2.384,42,1.725,43,1.725,44,2.805,45,2.725,46,2.725,47,2.805,48,2.805,49,3.877,50,2.805,51,3.877,52,3.877,53,1.972,54,2.384,55,2.805,56,2.725,57,2.725]],["title/injectables/AppService.html",[21,1.44,58,0.681]],["body/injectables/AppService.html",[3,0.53,4,0.456,5,0.456,7,0.53,8,1.219,9,4.438,11,0.04,13,0.782,15,0.981,16,1.861,17,0.877,18,0.877,21,2.308,23,0.53,24,0.385,28,1.348,30,0.032,31,0.032,58,1.091,59,1.664,60,3.135,61,3.819,62,3.819,63,2.348]],["title/classes/ExceptionFilterHttp.html",[24,0.299,54,1.822]],["body/classes/ExceptionFilterHttp.html",[3,0.265,4,0.227,5,0.227,7,0.265,8,0.751,11,0.041,13,0.817,15,0.489,17,0.817,18,0.438,23,0.265,24,0.192,25,1.172,26,0.831,28,1.256,30,0.02,31,0.02,53,1.34,54,1.798,64,1.172,65,1.565,66,2.056,67,3.558,68,1.032,69,1.937,70,3.558,71,1.937,72,2.453,73,2.805,74,0.831,75,1.906,76,3.99,77,2.924,78,0.836,79,0.836,80,0.989,81,0.836,82,2.924,83,3.558,84,1.038,85,0.926,86,1.729,87,2.924,88,1.906,89,2.924,90,3.558,91,3.99,92,1.906,93,4.541,94,2.924,95,1.421,96,1.906,97,1.906,98,1.906,99,2.78,100,1.906,101,1.906,102,2.401,103,1.906,104,5.002,105,1.906,106,3.881,107,3.558,108,1.937,109,2.924,110,1.906,111,2.453,112,1.906,113,1.565,114,1.906,115,2.401,116,1.906,117,1.906,118,1.906,119,2.924,120,2.924,121,1.906,122,1.906,123,1.906,124,1.906,125,2.924,126,1.906,127,1.906,128,3.558,129,1.906,130,1.565,131,1.906,132,1.906,133,1.906,134,1.906,135,1.906,136,1.906,137,1.906,138,1.906,139,1.906,140,1.906]],["title/injectables/HttpGrowattProvider.html",[58,0.681,141,1.613]],["body/injectables/HttpGrowattProvider.html",[3,0.279,4,0.24,5,0.24,7,0.279,8,0.783,11,0.041,13,0.84,15,0.783,16,1.991,17,1.14,18,0.463,23,0.279,24,0.203,25,1.238,26,1.789,28,1.076,30,0.021,31,0.021,58,0.701,59,0.878,63,2.263,66,1.416,68,1.076,71,2.004,73,2.143,74,0.878,78,0.872,79,0.872,80,0.701,81,0.872,84,1.097,85,0.979,86,1.482,95,0.979,99,2.004,108,2.235,111,1.875,141,1.66,142,1.653,143,3.021,144,2.526,145,3.369,146,1.653,147,3.809,148,3.049,149,2.014,150,2.524,151,1.653,152,2.524,153,2.524,154,2.014,155,2.263,156,3.049,157,1.238,158,3.021,159,1.416,160,1.482,161,2.014,162,1.653,163,2.014,164,2.503,165,2.503,166,1.416,167,1.653,168,2.503,169,2.004,170,2.014,171,2.014,172,2.503,173,2.503,174,1.416,175,2.014,176,2.014,177,1.653,178,2.014,179,2.014,180,2.014,181,2.014,182,2.014]],["title/injectables/HttpMovideskProvider.html",[58,0.681,183,1.613]],["body/injectables/HttpMovideskProvider.html",[3,0.313,4,0.269,5,0.269,7,0.313,8,0.852,11,0.041,13,0.947,15,0.579,16,1.543,17,1.112,18,0.518,23,0.313,24,0.228,25,1.387,26,2.18,28,0.796,30,0.023,31,0.023,58,0.763,59,0.983,68,1.171,71,2.853,72,2.67,73,1.586,74,0.983,78,0.949,79,0.949,80,0.763,81,0.949,84,2.144,85,1.913,86,1.913,95,1.096,99,1.229,108,2.144,111,1.387,143,3.232,144,2.144,146,1.852,147,3.972,150,2.041,157,1.387,158,2.725,159,1.586,165,2.725,166,1.586,167,1.852,168,1.852,169,1.229,172,1.852,173,1.852,177,1.852,183,1.807,184,1.852,185,3.232,186,2.725,187,3.319,188,2.725,189,2.256,190,1.229,191,3.319,192,2.256,193,3.319,194,2.256,195,3.319,196,1.852,197,2.256,198,2.256,199,2.256,200,2.256,201,2.256,202,2.256]],["title/classes/HttpResponseException.html",[24,0.299,95,1.44]],["body/classes/HttpResponseException.html",[3,0.49,4,0.421,5,0.421,7,0.49,11,0.04,13,0.925,23,0.49,24,0.356,30,0.031,31,0.031,64,2.171,68,1.595,69,2.714,74,1.97,78,1.01,79,1.01,80,1.038,81,1.01,95,2.196,102,4.459,111,2.779,130,4.092,203,2.899,204,4.52,205,3.531,206,4.52,207,4.52,208,3.531,209,3.531]],["title/interfaces/IGrowatt.html",[160,1.44,210,1.291]],["body/interfaces/IGrowatt.html",[3,0.23,4,0.198,5,0.198,7,0.23,8,0.673,11,0.041,13,0.537,15,0.95,16,1.878,23,0.23,30,0.018,31,0.018,63,2.001,78,0.474,79,0.474,80,0.381,81,0.474,108,1.428,145,3.037,150,2.275,151,1.361,152,2.275,153,2.275,155,2.001,160,1.274,174,2.287,185,3.821,210,1.418,211,1.019,212,1.361,213,1.658,214,3.699,215,4.686,216,4.03,217,4.03,218,3.699,219,3.699,220,2.671,221,3.254,222,4.03,223,3.254,224,3.254,225,2.623,226,3.254,227,3.254,228,2.623,229,2.623,230,4.286,231,3.699,232,2.623,233,1.658,234,1.658,235,1.658,236,3.699,237,3.699,238,2.623,239,3.699,240,4.03,241,2.623,242,1.658,243,2.153,244,2.623,245,2.623,246,2.623,247,2.623,248,2.623,249,2.623,250,1.165,251,2.623,252,3.699,253,3.699,254,2.623,255,2.623,256,1.658,257,2.623,258,3.254,259,2.623,260,2.671,261,1.658,262,1.658,263,1.658,264,2.623,265,2.623,266,1.658,267,1.658,268,1.658]],["title/interfaces/IMovidesk.html",[210,1.291,269,1.822]],["body/interfaces/IMovidesk.html",[3,0.536,4,0.46,5,0.46,7,0.536,8,1.227,11,0.039,13,0.79,15,0.991,16,2.035,23,0.536,30,0.033,31,0.033,78,1.103,79,1.103,80,0.887,81,1.103,150,2.938,186,3.923,188,3.923,190,2.101,210,1.682,211,2.373,269,2.938,270,3.168,271,3.859]],["title/interfaces/ITicketUtil.html",[210,1.291,272,1.613]],["body/interfaces/ITicketUtil.html",[3,0.536,4,0.46,5,0.46,7,0.536,8,1.227,11,0.039,13,0.79,15,0.991,23,0.536,30,0.033,31,0.033,78,1.103,79,1.103,80,0.887,81,1.103,210,1.682,211,2.373,272,2.602,273,3.168,274,3.923,275,3.923,276,4.262,277,3.859,278,2.712,279,3.923]],["title/modules/SharedModule.html",[32,1.44,39,1.44]],["body/modules/SharedModule.html",[3,0.296,4,0.255,5,0.255,11,0.042,17,1.039,18,0.49,23,0.296,24,0.215,30,0.022,31,0.022,32,1.548,34,1.037,35,1.548,39,2.388,41,1.958,42,1.312,43,1.312,45,1.5,46,1.5,56,4.039,57,4.039,141,2.75,157,1.312,183,2.75,280,1.752,281,1.752,282,2.454,283,2.134,284,3.185,285,2.134,286,3.185,287,2.134,288,2.134,289,2.134,290,2.134,291,3.185,292,3.185,293,3.185]],["title/injectables/TicketUtil.html",[58,0.681,282,1.44]],["body/injectables/TicketUtil.html",[3,0.306,4,0.263,5,0.263,7,0.306,8,0.837,11,0.041,13,0.668,15,0.566,17,0.749,18,0.506,23,0.306,24,0.222,28,0.778,30,0.022,31,0.022,58,0.749,59,0.96,66,1.549,68,1.151,71,2.114,72,2.639,78,0.63,79,0.63,80,0.506,81,0.63,84,1.2,85,2.332,86,1.585,99,1.2,115,2.677,174,3.017,190,2.337,272,1.776,274,2.677,275,2.677,276,3.188,278,2.293,279,3.188,282,1.585,294,1.809,295,2.203,296,3.261,297,2.203,298,2.203,299,3.261,300,4.582,301,2.203,302,2.203,303,1.809,304,2.203,305,1.809,306,2.203,307,2.203,308,2.203,309,1.809,310,2.203,311,2.203,312,2.203,313,2.203,314,2.203,315,2.203,316,2.203,317,3.261,318,2.203,319,2.203,320,3.261,321,3.261,322,3.883,323,3.883,324,2.203,325,2.203,326,3.261,327,2.203,328,2.203,329,2.203,330,2.203]],["title/controllers/UpdateController.html",[0,1.613,331,1.822]],["body/controllers/UpdateController.html",[0,1.337,2,1.337,3,0.341,4,0.293,5,0.293,7,0.341,8,0.906,10,2.482,11,0.041,13,0.723,15,1.061,16,1.62,17,1.1,18,0.564,19,2.016,20,1.51,23,0.341,24,0.248,26,1.538,28,1.246,30,0.024,31,0.024,63,2.171,69,1.922,74,1.07,78,1.009,79,1.009,80,0.811,81,1.009,106,2.016,108,2.25,144,2.714,169,1.922,190,1.922,215,2.898,243,2.898,260,2.898,331,2.171,332,2.016,333,2.456,334,4.133,335,3.53,336,2.456,337,2.46,338,2.456,339,2.456,340,3.53,341,3.53,342,2.482,343,2.456,344,2.456,345,2.456,346,4.133,347,2.456,348,2.016,349,2.016,350,2.008,351,2.016,352,2.008,353,2.016,354,2.456,355,2.456,356,3.53,357,3.53,358,2.456,359,2.456,360,2.456,361,2.456,362,2.456]],["title/modules/UpdateModule.html",[32,1.44,40,1.613]],["body/modules/UpdateModule.html",[2,2.245,3,0.426,4,0.366,5,0.366,11,0.04,17,1.193,18,0.705,23,0.426,24,0.309,30,0.028,31,0.028,32,2.003,34,1.491,35,2.003,39,2.597,40,3.094,41,2.535,42,1.887,43,1.887,45,2.898,46,2.898,331,2.862,350,2.597,351,2.519,352,2.597,353,2.519,363,2.519,364,2.519,365,3.069,366,3.069,367,3.069,368,3.069,369,3.069]],["title/classes/UpdateOSSDTO.html",[24,0.299,337,1.613]],["body/classes/UpdateOSSDTO.html",[3,0.446,4,0.383,5,0.383,7,0.446,10,3.348,11,0.04,13,0.975,16,2.123,17,0.977,20,1.976,23,0.446,24,0.429,30,0.029,31,0.029,64,1.976,68,1.5,80,1.094,152,2.929,153,2.929,155,2.929,337,2.315,370,2.638,371,4.251,372,3.214,373,3.214,374,3.214,375,3.214,376,5.068,377,4.251,378,5.068,379,4.763,380,2.638]],["title/injectables/UpdateOSSService.html",[58,0.681,350,1.44]],["body/injectables/UpdateOSSService.html",[3,0.424,4,0.365,5,0.365,7,0.424,8,1.055,11,0.04,13,0.841,15,0.785,17,1.067,18,0.702,23,0.424,24,0.308,26,1.332,28,1.079,30,0.028,31,0.028,58,0.944,59,1.332,69,1.664,74,1.791,78,1.176,79,1.176,80,0.944,81,1.176,144,2.529,152,2.528,153,2.528,155,2.528,160,2.414,169,1.664,337,2.705,342,2.149,349,2.509,350,1.998,381,2.509,382,3.813,383,3.056,384,3.056,385,3.375,386,2.509,387,3.056,388,2.509,389,2.509,390,2.509,391,2.509]],["title/injectables/UpdateV2Service.html",[58,0.681,352,1.44]],["body/injectables/UpdateV2Service.html",[3,0.35,4,0.301,5,0.301,7,0.35,8,0.924,11,0.041,13,0.859,15,0.647,17,1.051,18,0.579,23,0.35,24,0.254,26,1.828,28,0.89,30,0.024,31,0.024,58,0.827,59,1.099,68,1.27,69,2.284,71,2.284,72,2.812,74,1.568,78,1.029,79,1.029,80,0.827,81,1.029,84,1.373,85,1.226,86,1.748,99,1.959,144,2.284,160,2.223,169,1.959,190,1.373,269,2.812,272,2.491,278,1.773,282,2.038,303,2.954,305,2.954,309,2.954,342,1.773,352,1.748,382,3.443,385,3.443,386,2.07,388,2.07,389,2.07,390,2.07,391,2.07,392,2.07,393,2.522,394,3.598,395,3.598,396,2.522,397,3.598,398,2.522,399,2.522,400,2.522,401,2.522,402,2.522,403,2.522]],["title/coverage.html",[404,2.83]],["body/coverage.html",[0,2.15,1,1.771,5,0.344,6,2.364,11,0.04,21,1.4,24,0.454,30,0.027,31,0.027,54,1.771,58,1.205,60,2.364,65,2.364,80,0.662,86,1.4,95,1.4,141,1.568,142,2.364,160,1.4,183,1.568,184,2.364,203,2.364,210,1.963,212,2.364,220,4.724,269,1.771,270,2.364,272,1.568,273,2.364,282,1.4,294,2.364,331,1.771,332,2.364,337,1.568,350,1.4,352,1.4,370,2.364,381,2.364,392,2.364,404,2.025,405,2.88,406,2.88,407,2.88,408,4.847,409,3.948,410,4.505,411,2.364,412,2.88,413,2.364,414,2.88,415,2.88,416,2.88,417,2.88,418,2.88,419,2.88,420,3.948,421,2.88,422,2.88]],["title/dependencies.html",[35,1.729,423,2.039]],["body/dependencies.html",[11,0.041,18,0.827,20,2.213,24,0.461,30,0.031,31,0.031,35,1.749,53,2.53,157,2.213,159,2.53,164,2.955,166,2.53,380,2.955,424,3.599,425,5.029,426,3.599,427,3.599,428,3.599,429,3.599,430,3.599,431,3.599,432,3.599,433,3.599,434,3.599,435,3.599,436,3.599,437,3.599,438,3.599,439,3.599,440,3.599,441,3.599,442,3.599,443,3.599]],["title/miscellaneous/enumerations.html",[444,1.527,445,2.921]],["body/miscellaneous/enumerations.html",[7,0.565,11,0.039,30,0.034,31,0.034,85,2.583,162,4.052,196,4.052,444,2.501,445,3.339,446,4.068,447,4.068,448,4.068,449,4.068,450,4.068,451,4.068,452,4.068,453,4.068,454,4.068,455,4.068]],["title/miscellaneous/functions.html",[444,1.527,456,2.921]],["body/miscellaneous/functions.html",[7,0.615,11,0.035,30,0.035,31,0.035,411,3.635,413,4.523,444,2.723,456,3.635,457,4.428]],["title/index.html",[7,0.345,458,2.483,459,2.483]],["body/index.html",[4,0.353,11,0.04,30,0.027,31,0.027,113,2.43,250,2.081,404,2.081,460,2.96,461,2.96,462,4.023,463,2.96,464,2.96,465,2.96,466,2.96,467,2.96,468,4.569,469,2.96,470,2.96,471,2.96,472,2.96,473,5.41,474,2.96,475,2.96,476,2.96,477,5.288,478,2.96,479,2.96,480,4.023,481,2.96,482,2.96,483,2.96,484,2.96,485,4.023,486,4.023,487,2.96,488,2.96,489,2.96,490,4.023,491,4.023,492,2.96,493,2.96,494,2.96,495,2.96,496,2.96,497,2.43,498,2.96,499,2.96,500,2.96,501,2.96,502,2.96,503,2.96,504,2.96,505,2.96,506,2.96,507,2.96,508,2.43,509,2.96,510,2.96,511,2.96,512,2.96,513,2.96,514,2.96,515,2.43]],["title/modules.html",[34,1.956]],["body/modules.html",[11,0.034,30,0.034,31,0.034,33,2.6,34,2.055,39,2.055,40,2.303,497,4.436,516,5.404,517,5.404,518,5.404]],["title/overview.html",[519,3.304]],["body/overview.html",[2,1.364,11,0.041,21,2.031,30,0.024,31,0.024,33,3.248,34,1.217,35,1.74,36,2.056,37,2.056,38,2.056,39,2.51,40,2.928,41,2.202,42,1.54,43,1.54,56,3.92,57,3.92,59,1.092,64,1.54,141,2.483,183,2.483,211,1.54,280,2.056,281,2.056,282,2.216,350,2.031,352,2.031,363,2.056,364,2.056,519,2.056,520,4.179,521,2.505,522,2.505]],["title/properties.html",[68,1.256,423,2.039]],["body/properties.html",[11,0.04,30,0.035,31,0.035,68,1.536,250,3.059,348,3.572,508,3.572,515,3.572,523,4.351,524,4.351]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ExceptionFilterHttp.html":{},"injectables/HttpGrowattProvider.html":{},"injectables/HttpMovideskProvider.html":{},"classes/HttpResponseException.html":{},"interfaces/IGrowatt.html":{},"interfaces/IMovidesk.html":{},"interfaces/ITicketUtil.html":{},"modules/SharedModule.html":{},"injectables/TicketUtil.html":{},"controllers/UpdateController.html":{},"modules/UpdateModule.html":{},"classes/UpdateOSSDTO.html":{},"injectables/UpdateOSSService.html":{},"injectables/UpdateV2Service.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["0",{"_index":220,"title":{},"body":{"interfaces/IGrowatt.html":{},"coverage.html":{}}}],["0.0.1",{"_index":523,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":440,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":431,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":430,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":414,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":408,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":410,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":420,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":409,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":415,"title":{},"body":{"coverage.html":{}}}],["1.0.0",{"_index":424,"title":{},"body":{"dependencies.html":{}}}],["1.7.4",{"_index":433,"title":{},"body":{"dependencies.html":{}}}],["1/3",{"_index":419,"title":{},"body":{"coverage.html":{}}}],["103454",{"_index":304,"title":{},"body":{"injectables/TicketUtil.html":{}}}],["116301",{"_index":308,"title":{},"body":{"injectables/TicketUtil.html":{}}}],["122405",{"_index":306,"title":{},"body":{"injectables/TicketUtil.html":{}}}],["15",{"_index":227,"title":{},"body":{"interfaces/IGrowatt.html":{}}}],["16.0.3",{"_index":434,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":521,"title":{},"body":{"overview.html":{}}}],["2.29.4",{"_index":437,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":417,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":520,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":442,"title":{},"body":{"dependencies.html":{}}}],["33",{"_index":418,"title":{},"body":{"coverage.html":{}}}],["422",{"_index":121,"title":{},"body":{"classes/ExceptionFilterHttp.html":{}}}],["500",{"_index":105,"title":{},"body":{"classes/ExceptionFilterHttp.html":{}}}],["6",{"_index":522,"title":{},"body":{"overview.html":{}}}],["6.0.1",{"_index":436,"title":{},"body":{"dependencies.html":{}}}],["6.1.3",{"_index":428,"title":{},"body":{"dependencies.html":{}}}],["66",{"_index":416,"title":{},"body":{"coverage.html":{}}}],["7.2.0",{"_index":443,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":118,"title":{},"body":{"classes/ExceptionFilterHttp.html":{}}}],["9.0.0",{"_index":425,"title":{},"body":{"dependencies.html":{}}}],["92408",{"_index":302,"title":{},"body":{"injectables/TicketUtil.html":{}}}],["abstracthttpadapter",{"_index":83,"title":{},"body":{"classes/ExceptionFilterHttp.html":{}}}],["accepted",{"_index":140,"title":{},"body":{"classes/ExceptionFilterHttp.html":{}}}],["adapterhost",{"_index":82,"title":{},"body":{"classes/ExceptionFilterHttp.html":{}}}],["adapterhost.httpadapter",{"_index":98,"title":{},"body":{"classes/ExceptionFilterHttp.html":{}}}],["amazing",{"_index":498,"title":{},"body":{"index.html":{}}}],["antigo",{"_index":254,"title":{},"body":{"interfaces/IGrowatt.html":{}}}],["anygrid",{"_index":62,"title":{},"body":{"injectables/AppService.html":{}}}],["api/v3/supplysystem/bxchangeapplication",{"_index":452,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["api/v3/supplysystem/getosstoken",{"_index":450,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["apiproperty",{"_index":376,"title":{},"body":{"classes/UpdateOSSDTO.html":{}}}],["apiproperty()@isdatestring()@isnotempty",{"_index":374,"title":{},"body":{"classes/UpdateOSSDTO.html":{}}}],["apiproperty()@isstring()@isnotempty",{"_index":371,"title":{},"body":{"classes/UpdateOSSDTO.html":{}}}],["apitags",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"controllers/UpdateController.html":{}}}],["apitags('main",{"_index":27,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags('main')@get",{"_index":12,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags('update",{"_index":357,"title":{},"body":{"controllers/UpdateController.html":{}}}],["app",{"_index":475,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_filter",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["app_interceptor",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application/json",{"_index":116,"title":{},"body":{"classes/ExceptionFilterHttp.html":{}}}],["applications",{"_index":467,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":33,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":21,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["argumentshost",{"_index":91,"title":{},"body":{"classes/ExceptionFilterHttp.html":{}}}],["assign",{"_index":328,"title":{},"body":{"injectables/TicketUtil.html":{}}}],["async",{"_index":144,"title":{},"body":{"injectables/HttpGrowattProvider.html":{},"injectables/HttpMovideskProvider.html":{},"controllers/UpdateController.html":{},"injectables/UpdateOSSService.html":{},"injectables/UpdateV2Service.html":{}}}],["atualização",{"_index":243,"title":{},"body":{"interfaces/IGrowatt.html":{},"controllers/UpdateController.html":{}}}],["autenticação",{"_index":216,"title":{},"body":{"interfaces/IGrowatt.html":{}}}],["authenticate",{"_index":145,"title":{},"body":{"injectables/HttpGrowattProvider.html":{},"interfaces/IGrowatt.html":{}}}],["author",{"_index":508,"title":{},"body":{"index.html":{},"properties.html":{}}}],["await",{"_index":169,"title":{},"body":{"injectables/HttpGrowattProvider.html":{},"injectables/HttpMovideskProvider.html":{},"controllers/UpdateController.html":{},"injectables/UpdateOSSService.html":{},"injectables/UpdateV2Service.html":{}}}],["backers",{"_index":499,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":94,"title":{},"body":{"classes/ExceptionFilterHttp.html":{}}}],["base_url",{"_index":143,"title":{},"body":{"injectables/HttpGrowattProvider.html":{},"injectables/HttpMovideskProvider.html":{}}}],["body",{"_index":106,"title":{},"body":{"classes/ExceptionFilterHttp.html":{},"controllers/UpdateController.html":{}}}],["body.data",{"_index":138,"title":{},"body":{"classes/ExceptionFilterHttp.html":{}}}],["body.data.error",{"_index":127,"title":{},"body":{"classes/ExceptionFilterHttp.html":{}}}],["body.data.statuscode",{"_index":126,"title":{},"body":{"classes/ExceptionFilterHttp.html":{}}}],["bootstrap",{"_index":413,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["brasileira",{"_index":248,"title":{},"body":{"interfaces/IGrowatt.html":{}}}],["browse",{"_index":518,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":516,"title":{},"body":{"modules.html":{}}}],["building",{"_index":463,"title":{},"body":{"index.html":{}}}],["bx_change_app",{"_index":451,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["catch",{"_index":73,"title":{},"body":{"classes/ExceptionFilterHttp.html":{},"injectables/HttpGrowattProvider.html":{},"injectables/HttpMovideskProvider.html":{}}}],["catch(exception",{"_index":89,"title":{},"body":{"classes/ExceptionFilterHttp.html":{}}}],["charset=uft",{"_index":117,"title":{},"body":{"classes/ExceptionFilterHttp.html":{}}}],["checking",{"_index":317,"title":{},"body":{"injectables/TicketUtil.html":{}}}],["choice",{"_index":325,"title":{},"body":{"injectables/TicketUtil.html":{}}}],["class",{"_index":24,"title":{"classes/ExceptionFilterHttp.html":{},"classes/HttpResponseException.html":{},"classes/UpdateOSSDTO.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ExceptionFilterHttp.html":{},"injectables/HttpGrowattProvider.html":{},"injectables/HttpMovideskProvider.html":{},"classes/HttpResponseException.html":{},"modules/SharedModule.html":{},"injectables/TicketUtil.html":{},"controllers/UpdateController.html":{},"modules/UpdateModule.html":{},"classes/UpdateOSSDTO.html":{},"injectables/UpdateOSSService.html":{},"injectables/UpdateV2Service.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":64,"title":{},"body":{"classes/ExceptionFilterHttp.html":{},"classes/HttpResponseException.html":{},"classes/UpdateOSSDTO.html":{},"overview.html":{}}}],["classserializerinterceptor",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["cluster_appmodule",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":280,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":281,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_updatemodule",{"_index":363,"title":{},"body":{"modules/UpdateModule.html":{},"overview.html":{}}}],["cluster_updatemodule_imports",{"_index":365,"title":{},"body":{"modules/UpdateModule.html":{}}}],["cluster_updatemodule_providers",{"_index":364,"title":{},"body":{"modules/UpdateModule.html":{},"overview.html":{}}}],["com",{"_index":223,"title":{},"body":{"interfaces/IGrowatt.html":{}}}],["como",{"_index":239,"title":{},"body":{"interfaces/IGrowatt.html":{}}}],["completed",{"_index":110,"title":{},"body":{"classes/ExceptionFilterHttp.html":{}}}],["compression",{"_index":432,"title":{},"body":{"dependencies.html":{}}}],["config",{"_index":165,"title":{},"body":{"injectables/HttpGrowattProvider.html":{},"injectables/HttpMovideskProvider.html":{}}}],["console.log(resolver?.response?.data",{"_index":134,"title":{},"body":{"classes/ExceptionFilterHttp.html":{}}}],["const",{"_index":99,"title":{},"body":{"classes/ExceptionFilterHttp.html":{},"injectables/HttpGrowattProvider.html":{},"injectables/HttpMovideskProvider.html":{},"injectables/TicketUtil.html":{},"injectables/UpdateV2Service.html":{}}}],["constants/growatt.constant",{"_index":163,"title":{},"body":{"injectables/HttpGrowattProvider.html":{}}}],["constants/movidesk.constant",{"_index":197,"title":{},"body":{"injectables/HttpMovideskProvider.html":{}}}],["constructor",{"_index":74,"title":{},"body":{"classes/ExceptionFilterHttp.html":{},"injectables/HttpGrowattProvider.html":{},"injectables/HttpMovideskProvider.html":{},"classes/HttpResponseException.html":{},"controllers/UpdateController.html":{},"injectables/UpdateOSSService.html":{},"injectables/UpdateV2Service.html":{}}}],["constructor(adapterhost",{"_index":75,"title":{},"body":{"classes/ExceptionFilterHttp.html":{}}}],["constructor(growattprovider",{"_index":383,"title":{},"body":{"injectables/UpdateOSSService.html":{}}}],["constructor(httpservice",{"_index":146,"title":{},"body":{"injectables/HttpGrowattProvider.html":{},"injectables/HttpMovideskProvider.html":{}}}],["constructor(movideskprovider",{"_index":393,"title":{},"body":{"injectables/UpdateV2Service.html":{}}}],["constructor(private",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"classes/ExceptionFilterHttp.html":{},"injectables/HttpGrowattProvider.html":{},"injectables/HttpMovideskProvider.html":{}}}],["constructor(undefined",{"_index":205,"title":{},"body":{"classes/HttpResponseException.html":{}}}],["content",{"_index":115,"title":{},"body":{"classes/ExceptionFilterHttp.html":{},"injectables/TicketUtil.html":{}}}],["contexthttp",{"_index":100,"title":{},"body":{"classes/ExceptionFilterHttp.html":{}}}],["contexthttp.getresponse",{"_index":103,"title":{},"body":{"classes/ExceptionFilterHttp.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/UpdateController.html":{}},"body":{"controllers/AppController.html":{},"controllers/UpdateController.html":{},"coverage.html":{}}}],["controller('update",{"_index":354,"title":{},"body":{"controllers/UpdateController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/UpdateController.html":{},"modules/UpdateModule.html":{},"overview.html":{}}}],["controllers/update.controller",{"_index":369,"title":{},"body":{"modules/UpdateModule.html":{}}}],["core.error",{"_index":130,"title":{},"body":{"classes/ExceptionFilterHttp.html":{},"classes/HttpResponseException.html":{}}}],["core.response",{"_index":207,"title":{},"body":{"classes/HttpResponseException.html":{}}}],["core/filter/exception_http.filter",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["coverage",{"_index":404,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["customfieldvalues",{"_index":278,"title":{},"body":{"interfaces/ITicketUtil.html":{},"injectables/TicketUtil.html":{},"injectables/UpdateV2Service.html":{}}}],["customfieldvalues.foreach((element",{"_index":313,"title":{},"body":{"injectables/TicketUtil.html":{}}}],["câmbio/rma",{"_index":247,"title":{},"body":{"interfaces/IGrowatt.html":{}}}],["código",{"_index":263,"title":{},"body":{"interfaces/IGrowatt.html":{}}}],["d",{"_index":182,"title":{},"body":{"injectables/HttpGrowattProvider.html":{}}}],["da",{"_index":258,"title":{},"body":{"interfaces/IGrowatt.html":{}}}],["data",{"_index":108,"title":{},"body":{"classes/ExceptionFilterHttp.html":{},"injectables/HttpGrowattProvider.html":{},"injectables/HttpMovideskProvider.html":{},"interfaces/IGrowatt.html":{},"controllers/UpdateController.html":{}}}],["dateingressintostock",{"_index":309,"title":{},"body":{"injectables/TicketUtil.html":{},"injectables/UpdateV2Service.html":{}}}],["de",{"_index":215,"title":{},"body":{"interfaces/IGrowatt.html":{},"controllers/UpdateController.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/UpdateController.html":{},"classes/UpdateOSSDTO.html":{}}}],["default",{"_index":84,"title":{},"body":{"classes/ExceptionFilterHttp.html":{},"injectables/HttpGrowattProvider.html":{},"injectables/HttpMovideskProvider.html":{},"injectables/TicketUtil.html":{},"injectables/UpdateV2Service.html":{}}}],["defined",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ExceptionFilterHttp.html":{},"injectables/HttpGrowattProvider.html":{},"injectables/HttpMovideskProvider.html":{},"classes/HttpResponseException.html":{},"interfaces/IGrowatt.html":{},"interfaces/IMovidesk.html":{},"interfaces/ITicketUtil.html":{},"injectables/TicketUtil.html":{},"controllers/UpdateController.html":{},"classes/UpdateOSSDTO.html":{},"injectables/UpdateOSSService.html":{},"injectables/UpdateV2Service.html":{}}}],["delete",{"_index":125,"title":{},"body":{"classes/ExceptionFilterHttp.html":{}}}],["dependencies",{"_index":35,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/UpdateModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":250,"title":{},"body":{"interfaces/IGrowatt.html":{},"index.html":{},"properties.html":{}}}],["descrição",{"_index":266,"title":{},"body":{"interfaces/IGrowatt.html":{}}}],["development",{"_index":476,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":405,"title":{},"body":{"coverage.html":{}}}],["dotenv",{"_index":166,"title":{},"body":{"injectables/HttpGrowattProvider.html":{},"injectables/HttpMovideskProvider.html":{},"dependencies.html":{}}}],["dtos/update_oss.dto",{"_index":349,"title":{},"body":{"controllers/UpdateController.html":{},"injectables/UpdateOSSService.html":{}}}],["e2e",{"_index":487,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":464,"title":{},"body":{"index.html":{}}}],["element.customfieldid",{"_index":315,"title":{},"body":{"injectables/TicketUtil.html":{}}}],["element.items[0].customfielditem",{"_index":327,"title":{},"body":{"injectables/TicketUtil.html":{}}}],["element.value",{"_index":324,"title":{},"body":{"injectables/TicketUtil.html":{}}}],["element?.items[0]?.customfielditem",{"_index":326,"title":{},"body":{"injectables/TicketUtil.html":{}}}],["element?.value",{"_index":321,"title":{},"body":{"injectables/TicketUtil.html":{}}}],["empty",{"_index":329,"title":{},"body":{"injectables/TicketUtil.html":{}}}],["entity",{"_index":124,"title":{},"body":{"classes/ExceptionFilterHttp.html":{}}}],["enumerations",{"_index":445,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error",{"_index":111,"title":{},"body":{"classes/ExceptionFilterHttp.html":{},"injectables/HttpGrowattProvider.html":{},"injectables/HttpMovideskProvider.html":{},"classes/HttpResponseException.html":{}}}],["est",{"_index":236,"title":{},"body":{"interfaces/IGrowatt.html":{}}}],["example",{"_index":231,"title":{},"body":{"interfaces/IGrowatt.html":{}}}],["exception",{"_index":93,"title":{},"body":{"classes/ExceptionFilterHttp.html":{}}}],["exceptionfilter",{"_index":67,"title":{},"body":{"classes/ExceptionFilterHttp.html":{}}}],["exceptionfilterhttp",{"_index":54,"title":{"classes/ExceptionFilterHttp.html":{}},"body":{"modules/AppModule.html":{},"classes/ExceptionFilterHttp.html":{},"coverage.html":{}}}],["execute",{"_index":382,"title":{},"body":{"injectables/UpdateOSSService.html":{},"injectables/UpdateV2Service.html":{}}}],["execute(undefined",{"_index":386,"title":{},"body":{"injectables/UpdateOSSService.html":{},"injectables/UpdateV2Service.html":{}}}],["expire",{"_index":226,"title":{},"body":{"interfaces/IGrowatt.html":{}}}],["export",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ExceptionFilterHttp.html":{},"injectables/HttpGrowattProvider.html":{},"injectables/HttpMovideskProvider.html":{},"classes/HttpResponseException.html":{},"interfaces/IGrowatt.html":{},"interfaces/IMovidesk.html":{},"interfaces/ITicketUtil.html":{},"modules/SharedModule.html":{},"injectables/TicketUtil.html":{},"controllers/UpdateController.html":{},"modules/UpdateModule.html":{},"classes/UpdateOSSDTO.html":{},"injectables/UpdateOSSService.html":{},"injectables/UpdateV2Service.html":{}}}],["exports",{"_index":284,"title":{},"body":{"modules/SharedModule.html":{}}}],["express",{"_index":427,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":204,"title":{},"body":{"classes/HttpResponseException.html":{}}}],["falha",{"_index":264,"title":{},"body":{"interfaces/IGrowatt.html":{}}}],["field",{"_index":311,"title":{},"body":{"injectables/TicketUtil.html":{}}}],["fieldfound",{"_index":300,"title":{},"body":{"injectables/TicketUtil.html":{}}}],["fields",{"_index":320,"title":{},"body":{"injectables/TicketUtil.html":{}}}],["fieldstobefound",{"_index":301,"title":{},"body":{"injectables/TicketUtil.html":{}}}],["fieldstobefound.foreach((item",{"_index":314,"title":{},"body":{"injectables/TicketUtil.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ExceptionFilterHttp.html":{},"injectables/HttpGrowattProvider.html":{},"injectables/HttpMovideskProvider.html":{},"classes/HttpResponseException.html":{},"interfaces/IGrowatt.html":{},"interfaces/IMovidesk.html":{},"interfaces/ITicketUtil.html":{},"modules/SharedModule.html":{},"injectables/TicketUtil.html":{},"controllers/UpdateController.html":{},"modules/UpdateModule.html":{},"classes/UpdateOSSDTO.html":{},"injectables/UpdateOSSService.html":{},"injectables/UpdateV2Service.html":{},"coverage.html":{}}}],["findfields",{"_index":274,"title":{},"body":{"interfaces/ITicketUtil.html":{},"injectables/TicketUtil.html":{}}}],["findfields(customfieldvalues",{"_index":275,"title":{},"body":{"interfaces/ITicketUtil.html":{},"injectables/TicketUtil.html":{}}}],["framework",{"_index":462,"title":{},"body":{"index.html":{}}}],["function",{"_index":412,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":456,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["função",{"_index":237,"title":{},"body":{"interfaces/IGrowatt.html":{}}}],["get_oss_token",{"_index":449,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getticket",{"_index":186,"title":{},"body":{"injectables/HttpMovideskProvider.html":{},"interfaces/IMovidesk.html":{}}}],["getticket(id",{"_index":188,"title":{},"body":{"injectables/HttpMovideskProvider.html":{},"interfaces/IMovidesk.html":{}}}],["getting",{"_index":458,"title":{"index.html":{}},"body":{}}],["global",{"_index":286,"title":{},"body":{"modules/SharedModule.html":{}}}],["grow",{"_index":494,"title":{},"body":{"index.html":{}}}],["growatt",{"_index":291,"title":{},"body":{"modules/SharedModule.html":{}}}],["growattconstant",{"_index":162,"title":{},"body":{"injectables/HttpGrowattProvider.html":{},"miscellaneous/enumerations.html":{}}}],["growattconstant.bx_change_app",{"_index":178,"title":{},"body":{"injectables/HttpGrowattProvider.html":{}}}],["growattconstant.get_oss_token",{"_index":171,"title":{},"body":{"injectables/HttpGrowattProvider.html":{}}}],["growattprovider",{"_index":385,"title":{},"body":{"injectables/UpdateOSSService.html":{},"injectables/UpdateV2Service.html":{}}}],["helmet",{"_index":435,"title":{},"body":{"dependencies.html":{}}}],["here",{"_index":505,"title":{},"body":{"index.html":{}}}],["host",{"_index":90,"title":{},"body":{"classes/ExceptionFilterHttp.html":{}}}],["host.switchtohttp",{"_index":101,"title":{},"body":{"classes/ExceptionFilterHttp.html":{}}}],["http/httpexception",{"_index":96,"title":{},"body":{"classes/ExceptionFilterHttp.html":{}}}],["httpadapter",{"_index":70,"title":{},"body":{"classes/ExceptionFilterHttp.html":{}}}],["httpadapterhost",{"_index":76,"title":{},"body":{"classes/ExceptionFilterHttp.html":{}}}],["httpcode",{"_index":347,"title":{},"body":{"controllers/UpdateController.html":{}}}],["httpcode(200",{"_index":356,"title":{},"body":{"controllers/UpdateController.html":{}}}],["httpgrowattprovider",{"_index":141,"title":{"injectables/HttpGrowattProvider.html":{}},"body":{"injectables/HttpGrowattProvider.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{}}}],["httpmodule",{"_index":285,"title":{},"body":{"modules/SharedModule.html":{}}}],["httpmodule.register",{"_index":290,"title":{},"body":{"modules/SharedModule.html":{}}}],["httpmovideskprovider",{"_index":183,"title":{"injectables/HttpMovideskProvider.html":{}},"body":{"injectables/HttpMovideskProvider.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{}}}],["httpresponseexception",{"_index":95,"title":{"classes/HttpResponseException.html":{}},"body":{"classes/ExceptionFilterHttp.html":{},"injectables/HttpGrowattProvider.html":{},"injectables/HttpMovideskProvider.html":{},"classes/HttpResponseException.html":{},"coverage.html":{}}}],["httpresponseexception(error",{"_index":173,"title":{},"body":{"injectables/HttpGrowattProvider.html":{},"injectables/HttpMovideskProvider.html":{}}}],["https://docs.nestjs.com/modules",{"_index":367,"title":{},"body":{"modules/UpdateModule.html":{}}}],["https://nestjs.com",{"_index":512,"title":{},"body":{"index.html":{}}}],["httpservice",{"_index":147,"title":{},"body":{"injectables/HttpGrowattProvider.html":{},"injectables/HttpMovideskProvider.html":{}}}],["id",{"_index":190,"title":{},"body":{"injectables/HttpMovideskProvider.html":{},"interfaces/IMovidesk.html":{},"injectables/TicketUtil.html":{},"controllers/UpdateController.html":{},"injectables/UpdateV2Service.html":{}}}],["id=${id",{"_index":201,"title":{},"body":{"injectables/HttpMovideskProvider.html":{}}}],["identifier",{"_index":406,"title":{},"body":{"coverage.html":{}}}],["igrowatt",{"_index":160,"title":{"interfaces/IGrowatt.html":{}},"body":{"injectables/HttpGrowattProvider.html":{},"interfaces/IGrowatt.html":{},"injectables/UpdateOSSService.html":{},"injectables/UpdateV2Service.html":{},"coverage.html":{}}}],["imovidesk",{"_index":269,"title":{"interfaces/IMovidesk.html":{}},"body":{"interfaces/IMovidesk.html":{},"injectables/UpdateV2Service.html":{},"coverage.html":{}}}],["implements",{"_index":66,"title":{},"body":{"classes/ExceptionFilterHttp.html":{},"injectables/HttpGrowattProvider.html":{},"injectables/TicketUtil.html":{}}}],["import",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ExceptionFilterHttp.html":{},"injectables/HttpGrowattProvider.html":{},"injectables/HttpMovideskProvider.html":{},"modules/SharedModule.html":{},"injectables/TicketUtil.html":{},"controllers/UpdateController.html":{},"modules/UpdateModule.html":{},"classes/UpdateOSSDTO.html":{},"injectables/UpdateOSSService.html":{},"injectables/UpdateV2Service.html":{}}}],["imports",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/UpdateModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ExceptionFilterHttp.html":{},"injectables/HttpGrowattProvider.html":{},"injectables/HttpMovideskProvider.html":{},"classes/HttpResponseException.html":{},"interfaces/IGrowatt.html":{},"interfaces/IMovidesk.html":{},"interfaces/ITicketUtil.html":{},"injectables/TicketUtil.html":{},"controllers/UpdateController.html":{},"classes/UpdateOSSDTO.html":{},"injectables/UpdateOSSService.html":{},"injectables/UpdateV2Service.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["indica",{"_index":221,"title":{},"body":{"interfaces/IGrowatt.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ExceptionFilterHttp.html":{},"injectables/HttpGrowattProvider.html":{},"injectables/HttpMovideskProvider.html":{},"classes/HttpResponseException.html":{},"interfaces/IGrowatt.html":{},"interfaces/IMovidesk.html":{},"interfaces/ITicketUtil.html":{},"modules/SharedModule.html":{},"injectables/TicketUtil.html":{},"controllers/UpdateController.html":{},"modules/UpdateModule.html":{},"classes/UpdateOSSDTO.html":{},"injectables/UpdateOSSService.html":{},"injectables/UpdateV2Service.html":{}}}],["informações",{"_index":246,"title":{},"body":{"interfaces/IGrowatt.html":{}}}],["inicial",{"_index":268,"title":{},"body":{"interfaces/IGrowatt.html":{}}}],["inject",{"_index":388,"title":{},"body":{"injectables/UpdateOSSService.html":{},"injectables/UpdateV2Service.html":{}}}],["inject('growatt",{"_index":390,"title":{},"body":{"injectables/UpdateOSSService.html":{},"injectables/UpdateV2Service.html":{}}}],["inject('movidesk",{"_index":400,"title":{},"body":{"injectables/UpdateV2Service.html":{}}}],["inject('ticket",{"_index":401,"title":{},"body":{"injectables/UpdateV2Service.html":{}}}],["injectable",{"_index":58,"title":{"injectables/AppService.html":{},"injectables/HttpGrowattProvider.html":{},"injectables/HttpMovideskProvider.html":{},"injectables/TicketUtil.html":{},"injectables/UpdateOSSService.html":{},"injectables/UpdateV2Service.html":{}},"body":{"injectables/AppService.html":{},"injectables/HttpGrowattProvider.html":{},"injectables/HttpMovideskProvider.html":{},"injectables/TicketUtil.html":{},"injectables/UpdateOSSService.html":{},"injectables/UpdateV2Service.html":{},"coverage.html":{}}}],["injectables",{"_index":59,"title":{},"body":{"injectables/AppService.html":{},"injectables/HttpGrowattProvider.html":{},"injectables/HttpMovideskProvider.html":{},"injectables/TicketUtil.html":{},"injectables/UpdateOSSService.html":{},"injectables/UpdateV2Service.html":{},"overview.html":{}}}],["installation",{"_index":472,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":474,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":119,"title":{},"body":{"classes/ExceptionFilterHttp.html":{}}}],["interface",{"_index":210,"title":{"interfaces/IGrowatt.html":{},"interfaces/IMovidesk.html":{},"interfaces/ITicketUtil.html":{}},"body":{"interfaces/IGrowatt.html":{},"interfaces/IMovidesk.html":{},"interfaces/ITicketUtil.html":{},"coverage.html":{}}}],["interfaces",{"_index":211,"title":{},"body":{"interfaces/IGrowatt.html":{},"interfaces/IMovidesk.html":{},"interfaces/ITicketUtil.html":{},"overview.html":{}}}],["interfaces/igrowatt",{"_index":161,"title":{},"body":{"injectables/HttpGrowattProvider.html":{}}}],["interfaces/iticket.util",{"_index":298,"title":{},"body":{"injectables/TicketUtil.html":{}}}],["internal",{"_index":112,"title":{},"body":{"classes/ExceptionFilterHttp.html":{}}}],["isdatestring",{"_index":377,"title":{},"body":{"classes/UpdateOSSDTO.html":{}}}],["isnotempty",{"_index":378,"title":{},"body":{"classes/UpdateOSSDTO.html":{}}}],["isstring",{"_index":379,"title":{},"body":{"classes/UpdateOSSDTO.html":{}}}],["item.id",{"_index":316,"title":{},"body":{"injectables/TicketUtil.html":{}}}],["item.value",{"_index":323,"title":{},"body":{"injectables/TicketUtil.html":{}}}],["iticketutil",{"_index":272,"title":{"interfaces/ITicketUtil.html":{}},"body":{"interfaces/ITicketUtil.html":{},"injectables/TicketUtil.html":{},"injectables/UpdateV2Service.html":{},"coverage.html":{}}}],["join",{"_index":501,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":509,"title":{},"body":{"index.html":{}}}],["lastvaluefrom",{"_index":158,"title":{},"body":{"injectables/HttpGrowattProvider.html":{},"injectables/HttpMovideskProvider.html":{}}}],["license",{"_index":515,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":491,"title":{},"body":{"index.html":{}}}],["logger",{"_index":72,"title":{},"body":{"classes/ExceptionFilterHttp.html":{},"injectables/HttpMovideskProvider.html":{},"injectables/TicketUtil.html":{},"injectables/UpdateV2Service.html":{}}}],["logger(exceptionfilterhttp.name",{"_index":87,"title":{},"body":{"classes/ExceptionFilterHttp.html":{}}}],["logger(httpmovideskprovider.name",{"_index":193,"title":{},"body":{"injectables/HttpMovideskProvider.html":{}}}],["logger(ticketutil.name",{"_index":296,"title":{},"body":{"injectables/TicketUtil.html":{}}}],["logger(updatev2service.name",{"_index":397,"title":{},"body":{"injectables/UpdateV2Service.html":{}}}],["m",{"_index":181,"title":{},"body":{"injectables/HttpGrowattProvider.html":{}}}],["matching",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ExceptionFilterHttp.html":{},"injectables/HttpGrowattProvider.html":{},"injectables/HttpMovideskProvider.html":{},"classes/HttpResponseException.html":{},"interfaces/IGrowatt.html":{},"interfaces/IMovidesk.html":{},"interfaces/ITicketUtil.html":{},"modules/SharedModule.html":{},"injectables/TicketUtil.html":{},"controllers/UpdateController.html":{},"modules/UpdateModule.html":{},"classes/UpdateOSSDTO.html":{},"injectables/UpdateOSSService.html":{},"injectables/UpdateV2Service.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["metadata",{"_index":439,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ExceptionFilterHttp.html":{},"injectables/HttpGrowattProvider.html":{},"injectables/HttpMovideskProvider.html":{},"interfaces/IGrowatt.html":{},"interfaces/IMovidesk.html":{},"interfaces/ITicketUtil.html":{},"injectables/TicketUtil.html":{},"controllers/UpdateController.html":{},"injectables/UpdateOSSService.html":{},"injectables/UpdateV2Service.html":{}}}],["minutes",{"_index":228,"title":{},"body":{"interfaces/IGrowatt.html":{}}}],["minutes!&quot",{"_index":234,"title":{},"body":{"interfaces/IGrowatt.html":{}}}],["miscellaneous",{"_index":444,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["mit",{"_index":490,"title":{},"body":{"index.html":{}}}],["mode",{"_index":480,"title":{},"body":{"index.html":{}}}],["module",{"_index":32,"title":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/UpdateModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/UpdateModule.html":{}}}],["modules",{"_index":34,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/UpdateModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/shared/shared.module",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/update/update.module",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["moment",{"_index":164,"title":{},"body":{"injectables/HttpGrowattProvider.html":{},"dependencies.html":{}}}],["moment(time).format('%y",{"_index":180,"title":{},"body":{"injectables/HttpGrowattProvider.html":{}}}],["more",{"_index":504,"title":{},"body":{"index.html":{}}}],["movidesk",{"_index":292,"title":{},"body":{"modules/SharedModule.html":{}}}],["movidesk.customfieldvalue",{"_index":276,"title":{},"body":{"interfaces/ITicketUtil.html":{},"injectables/TicketUtil.html":{}}}],["movideskconstant",{"_index":196,"title":{},"body":{"injectables/HttpMovideskProvider.html":{},"miscellaneous/enumerations.html":{}}}],["movideskconstant.tickets",{"_index":199,"title":{},"body":{"injectables/HttpMovideskProvider.html":{}}}],["movideskprovider",{"_index":395,"title":{},"body":{"injectables/UpdateV2Service.html":{}}}],["msg",{"_index":249,"title":{},"body":{"interfaces/IGrowatt.html":{}}}],["msg\":\"the",{"_index":225,"title":{},"body":{"interfaces/IGrowatt.html":{}}}],["myśliwiec",{"_index":510,"title":{},"body":{"index.html":{}}}],["método",{"_index":214,"title":{},"body":{"interfaces/IGrowatt.html":{}}}],["na",{"_index":265,"title":{},"body":{"interfaces/IGrowatt.html":{}}}],["name",{"_index":79,"title":{},"body":{"classes/ExceptionFilterHttp.html":{},"injectables/HttpGrowattProvider.html":{},"injectables/HttpMovideskProvider.html":{},"classes/HttpResponseException.html":{},"interfaces/IGrowatt.html":{},"interfaces/IMovidesk.html":{},"interfaces/ITicketUtil.html":{},"injectables/TicketUtil.html":{},"controllers/UpdateController.html":{},"injectables/UpdateOSSService.html":{},"injectables/UpdateV2Service.html":{}}}],["nest",{"_index":468,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":514,"title":{},"body":{"index.html":{}}}],["nestjs/axios",{"_index":157,"title":{},"body":{"injectables/HttpGrowattProvider.html":{},"injectables/HttpMovideskProvider.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ExceptionFilterHttp.html":{},"injectables/HttpGrowattProvider.html":{},"injectables/HttpMovideskProvider.html":{},"modules/SharedModule.html":{},"injectables/TicketUtil.html":{},"controllers/UpdateController.html":{},"modules/UpdateModule.html":{},"injectables/UpdateOSSService.html":{},"injectables/UpdateV2Service.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"classes/ExceptionFilterHttp.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":426,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"controllers/UpdateController.html":{},"classes/UpdateOSSDTO.html":{},"dependencies.html":{}}}],["new",{"_index":86,"title":{},"body":{"classes/ExceptionFilterHttp.html":{},"injectables/HttpGrowattProvider.html":{},"injectables/HttpMovideskProvider.html":{},"injectables/TicketUtil.html":{},"injectables/UpdateV2Service.html":{},"coverage.html":{}}}],["newserialnumber",{"_index":155,"title":{},"body":{"injectables/HttpGrowattProvider.html":{},"interfaces/IGrowatt.html":{},"classes/UpdateOSSDTO.html":{},"injectables/UpdateOSSService.html":{}}}],["node.js",{"_index":461,"title":{},"body":{"index.html":{}}}],["novo",{"_index":251,"title":{},"body":{"interfaces/IGrowatt.html":{}}}],["npm",{"_index":473,"title":{},"body":{"index.html":{}}}],["null",{"_index":322,"title":{},"body":{"injectables/TicketUtil.html":{}}}],["número",{"_index":252,"title":{},"body":{"interfaces/IGrowatt.html":{}}}],["o",{"_index":230,"title":{},"body":{"interfaces/IGrowatt.html":{}}}],["obj",{"_index":174,"title":{},"body":{"injectables/HttpGrowattProvider.html":{},"interfaces/IGrowatt.html":{},"injectables/TicketUtil.html":{}}}],["obj\":\"fjj39oa47ir3669vh8m54rpk49lf55ll",{"_index":229,"title":{},"body":{"interfaces/IGrowatt.html":{}}}],["object",{"_index":299,"title":{},"body":{"injectables/TicketUtil.html":{}}}],["obtenha",{"_index":262,"title":{},"body":{"interfaces/IGrowatt.html":{}}}],["obter",{"_index":217,"title":{},"body":{"interfaces/IGrowatt.html":{}}}],["oldserialnumber",{"_index":152,"title":{},"body":{"injectables/HttpGrowattProvider.html":{},"interfaces/IGrowatt.html":{},"classes/UpdateOSSDTO.html":{},"injectables/UpdateOSSService.html":{}}}],["open",{"_index":492,"title":{},"body":{"index.html":{}}}],["operação",{"_index":259,"title":{},"body":{"interfaces/IGrowatt.html":{}}}],["optional",{"_index":81,"title":{},"body":{"classes/ExceptionFilterHttp.html":{},"injectables/HttpGrowattProvider.html":{},"injectables/HttpMovideskProvider.html":{},"classes/HttpResponseException.html":{},"interfaces/IGrowatt.html":{},"interfaces/IMovidesk.html":{},"interfaces/ITicketUtil.html":{},"injectables/TicketUtil.html":{},"controllers/UpdateController.html":{},"injectables/UpdateOSSService.html":{},"injectables/UpdateV2Service.html":{}}}],["oss",{"_index":341,"title":{},"body":{"controllers/UpdateController.html":{}}}],["out",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/UpdateModule.html":{},"overview.html":{}}}],["overview",{"_index":519,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":423,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":260,"title":{},"body":{"interfaces/IGrowatt.html":{},"controllers/UpdateController.html":{}}}],["parameters",{"_index":78,"title":{},"body":{"classes/ExceptionFilterHttp.html":{},"injectables/HttpGrowattProvider.html":{},"injectables/HttpMovideskProvider.html":{},"classes/HttpResponseException.html":{},"interfaces/IGrowatt.html":{},"interfaces/IMovidesk.html":{},"interfaces/ITicketUtil.html":{},"injectables/TicketUtil.html":{},"controllers/UpdateController.html":{},"injectables/UpdateOSSService.html":{},"injectables/UpdateV2Service.html":{}}}],["parâmetro",{"_index":241,"title":{},"body":{"interfaces/IGrowatt.html":{}}}],["please",{"_index":502,"title":{},"body":{"index.html":{}}}],["porta",{"_index":218,"title":{},"body":{"interfaces/IGrowatt.html":{}}}],["post",{"_index":346,"title":{},"body":{"controllers/UpdateController.html":{}}}],["prefix",{"_index":333,"title":{},"body":{"controllers/UpdateController.html":{}}}],["private",{"_index":69,"title":{},"body":{"classes/ExceptionFilterHttp.html":{},"classes/HttpResponseException.html":{},"controllers/UpdateController.html":{},"injectables/UpdateOSSService.html":{},"injectables/UpdateV2Service.html":{}}}],["process.env.growatt_url",{"_index":156,"title":{},"body":{"injectables/HttpGrowattProvider.html":{}}}],["process.env.movidesk_token",{"_index":195,"title":{},"body":{"injectables/HttpMovideskProvider.html":{}}}],["process.env.movidesk_url",{"_index":191,"title":{},"body":{"injectables/HttpMovideskProvider.html":{}}}],["processed",{"_index":139,"title":{},"body":{"classes/ExceptionFilterHttp.html":{}}}],["production",{"_index":482,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":460,"title":{},"body":{"index.html":{}}}],["project",{"_index":493,"title":{},"body":{"index.html":{}}}],["promise",{"_index":150,"title":{},"body":{"injectables/HttpGrowattProvider.html":{},"injectables/HttpMovideskProvider.html":{},"interfaces/IGrowatt.html":{},"interfaces/IMovidesk.html":{}}}],["properties",{"_index":68,"title":{"properties.html":{}},"body":{"classes/ExceptionFilterHttp.html":{},"injectables/HttpGrowattProvider.html":{},"injectables/HttpMovideskProvider.html":{},"classes/HttpResponseException.html":{},"injectables/TicketUtil.html":{},"classes/UpdateOSSDTO.html":{},"injectables/UpdateV2Service.html":{},"properties.html":{}}}],["property",{"_index":330,"title":{},"body":{"injectables/TicketUtil.html":{}}}],["protected",{"_index":71,"title":{},"body":{"classes/ExceptionFilterHttp.html":{},"injectables/HttpGrowattProvider.html":{},"injectables/HttpMovideskProvider.html":{},"injectables/TicketUtil.html":{},"injectables/UpdateV2Service.html":{}}}],["provide",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["providers",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/UpdateModule.html":{}}}],["providers/http/http.growatt.provider",{"_index":287,"title":{},"body":{"modules/SharedModule.html":{}}}],["providers/http/http.movidesk.provider",{"_index":288,"title":{},"body":{"modules/SharedModule.html":{}}}],["página",{"_index":267,"title":{},"body":{"interfaces/IGrowatt.html":{}}}],["quot;msg&quot;:&quot;the",{"_index":233,"title":{},"body":{"interfaces/IGrowatt.html":{}}}],["quot;msg&quot;:&quot;换机成功!&quot",{"_index":256,"title":{},"body":{"interfaces/IGrowatt.html":{}}}],["quot;obj&quot;:&quot;fjj39oa47ir3669vh8m54rpk49lf55ll&quot",{"_index":235,"title":{},"body":{"interfaces/IGrowatt.html":{}}}],["quot;result&quot;:0",{"_index":232,"title":{},"body":{"interfaces/IGrowatt.html":{}}}],["read",{"_index":503,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"classes/ExceptionFilterHttp.html":{},"injectables/HttpGrowattProvider.html":{},"injectables/HttpMovideskProvider.html":{},"controllers/UpdateController.html":{},"injectables/UpdateOSSService.html":{},"injectables/UpdateV2Service.html":{}}}],["receba",{"_index":244,"title":{},"body":{"interfaces/IGrowatt.html":{}}}],["recebimento",{"_index":245,"title":{},"body":{"interfaces/IGrowatt.html":{}}}],["reflect",{"_index":438,"title":{},"body":{"dependencies.html":{}}}],["regexp('html",{"_index":137,"title":{},"body":{"classes/ExceptionFilterHttp.html":{}}}],["remark",{"_index":261,"title":{},"body":{"interfaces/IGrowatt.html":{}}}],["repository",{"_index":471,"title":{},"body":{"index.html":{}}}],["request",{"_index":109,"title":{},"body":{"classes/ExceptionFilterHttp.html":{}}}],["reset",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/UpdateModule.html":{},"overview.html":{}}}],["resolver",{"_index":120,"title":{},"body":{"classes/ExceptionFilterHttp.html":{}}}],["resolver.getresponse",{"_index":122,"title":{},"body":{"classes/ExceptionFilterHttp.html":{}}}],["resolver?.response?.data",{"_index":132,"title":{},"body":{"classes/ExceptionFilterHttp.html":{}}}],["resolver?.response?.status",{"_index":131,"title":{},"body":{"classes/ExceptionFilterHttp.html":{}}}],["resolver?.response?.statustext",{"_index":133,"title":{},"body":{"classes/ExceptionFilterHttp.html":{}}}],["response",{"_index":102,"title":{},"body":{"classes/ExceptionFilterHttp.html":{},"classes/HttpResponseException.html":{}}}],["result\":0",{"_index":219,"title":{},"body":{"interfaces/IGrowatt.html":{}}}],["resultado",{"_index":222,"title":{},"body":{"interfaces/IGrowatt.html":{}}}],["results",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ExceptionFilterHttp.html":{},"injectables/HttpGrowattProvider.html":{},"injectables/HttpMovideskProvider.html":{},"classes/HttpResponseException.html":{},"interfaces/IGrowatt.html":{},"interfaces/IMovidesk.html":{},"interfaces/ITicketUtil.html":{},"modules/SharedModule.html":{},"injectables/TicketUtil.html":{},"controllers/UpdateController.html":{},"modules/UpdateModule.html":{},"classes/UpdateOSSDTO.html":{},"injectables/UpdateOSSService.html":{},"injectables/UpdateV2Service.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["retorno",{"_index":240,"title":{},"body":{"interfaces/IGrowatt.html":{}}}],["return",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ExceptionFilterHttp.html":{},"injectables/HttpGrowattProvider.html":{},"injectables/HttpMovideskProvider.html":{},"injectables/TicketUtil.html":{},"controllers/UpdateController.html":{},"injectables/UpdateOSSService.html":{},"injectables/UpdateV2Service.html":{}}}],["returns",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ExceptionFilterHttp.html":{},"injectables/HttpGrowattProvider.html":{},"injectables/HttpMovideskProvider.html":{},"interfaces/IGrowatt.html":{},"interfaces/IMovidesk.html":{},"interfaces/ITicketUtil.html":{},"injectables/TicketUtil.html":{},"controllers/UpdateController.html":{},"injectables/UpdateOSSService.html":{},"injectables/UpdateV2Service.html":{}}}],["rimraf",{"_index":441,"title":{},"body":{"dependencies.html":{}}}],["rota",{"_index":340,"title":{},"body":{"controllers/UpdateController.html":{}}}],["run",{"_index":477,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":159,"title":{},"body":{"injectables/HttpGrowattProvider.html":{},"injectables/HttpMovideskProvider.html":{},"dependencies.html":{}}}],["scalable",{"_index":465,"title":{},"body":{"index.html":{}}}],["server",{"_index":113,"title":{},"body":{"classes/ExceptionFilterHttp.html":{},"index.html":{}}}],["services/update_oss.service",{"_index":351,"title":{},"body":{"controllers/UpdateController.html":{},"modules/UpdateModule.html":{}}}],["services/update_v2.service",{"_index":353,"title":{},"body":{"controllers/UpdateController.html":{},"modules/UpdateModule.html":{}}}],["shared/shared.module",{"_index":368,"title":{},"body":{"modules/UpdateModule.html":{}}}],["sharedmodule",{"_index":39,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/UpdateModule.html":{},"modules.html":{},"overview.html":{}}}],["side",{"_index":466,"title":{},"body":{"index.html":{}}}],["simple",{"_index":318,"title":{},"body":{"injectables/TicketUtil.html":{}}}],["sndamaged",{"_index":303,"title":{},"body":{"injectables/TicketUtil.html":{},"injectables/UpdateV2Service.html":{}}}],["snfixedanygrid",{"_index":305,"title":{},"body":{"injectables/TicketUtil.html":{},"injectables/UpdateV2Service.html":{}}}],["snfixedtha",{"_index":307,"title":{},"body":{"injectables/TicketUtil.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ExceptionFilterHttp.html":{},"injectables/HttpGrowattProvider.html":{},"injectables/HttpMovideskProvider.html":{},"classes/HttpResponseException.html":{},"interfaces/IGrowatt.html":{},"interfaces/IMovidesk.html":{},"interfaces/ITicketUtil.html":{},"modules/SharedModule.html":{},"injectables/TicketUtil.html":{},"controllers/UpdateController.html":{},"modules/UpdateModule.html":{},"classes/UpdateOSSDTO.html":{},"injectables/UpdateOSSService.html":{},"injectables/UpdateV2Service.html":{},"index.html":{}}}],["sponsors",{"_index":496,"title":{},"body":{"index.html":{}}}],["src/.../growatt.constant.ts",{"_index":446,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../main.ts",{"_index":457,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../movidesk.constant.ts",{"_index":447,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:11",{"_index":14,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":44,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":60,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":61,"title":{},"body":{"injectables/AppService.html":{}}}],["src/core/filter/exception_http.filter.ts",{"_index":65,"title":{},"body":{"classes/ExceptionFilterHttp.html":{},"coverage.html":{}}}],["src/core/filter/exception_http.filter.ts:13",{"_index":88,"title":{},"body":{"classes/ExceptionFilterHttp.html":{}}}],["src/core/filter/exception_http.filter.ts:14",{"_index":77,"title":{},"body":{"classes/ExceptionFilterHttp.html":{}}}],["src/core/filter/exception_http.filter.ts:20",{"_index":92,"title":{},"body":{"classes/ExceptionFilterHttp.html":{}}}],["src/core/http/httpexception",{"_index":167,"title":{},"body":{"injectables/HttpGrowattProvider.html":{},"injectables/HttpMovideskProvider.html":{}}}],["src/core/http/httpexception.ts",{"_index":203,"title":{},"body":{"classes/HttpResponseException.html":{},"coverage.html":{}}}],["src/core/http/httpexception.ts:2",{"_index":206,"title":{},"body":{"classes/HttpResponseException.html":{}}}],["src/main.ts",{"_index":411,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/shared/constants/growatt.constant.ts",{"_index":448,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/modules/shared/constants/movidesk.constant.ts",{"_index":453,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/modules/shared/providers/http/http.growatt.provider.ts",{"_index":142,"title":{},"body":{"injectables/HttpGrowattProvider.html":{},"coverage.html":{}}}],["src/modules/shared/providers/http/http.growatt.provider.ts:13",{"_index":148,"title":{},"body":{"injectables/HttpGrowattProvider.html":{}}}],["src/modules/shared/providers/http/http.growatt.provider.ts:17",{"_index":149,"title":{},"body":{"injectables/HttpGrowattProvider.html":{}}}],["src/modules/shared/providers/http/http.growatt.provider.ts:28",{"_index":154,"title":{},"body":{"injectables/HttpGrowattProvider.html":{}}}],["src/modules/shared/providers/http/http.movidesk.provider.ts",{"_index":184,"title":{},"body":{"injectables/HttpMovideskProvider.html":{},"coverage.html":{}}}],["src/modules/shared/providers/http/http.movidesk.provider.ts:11",{"_index":194,"title":{},"body":{"injectables/HttpMovideskProvider.html":{}}}],["src/modules/shared/providers/http/http.movidesk.provider.ts:12",{"_index":192,"title":{},"body":{"injectables/HttpMovideskProvider.html":{}}}],["src/modules/shared/providers/http/http.movidesk.provider.ts:13",{"_index":187,"title":{},"body":{"injectables/HttpMovideskProvider.html":{}}}],["src/modules/shared/providers/http/http.movidesk.provider.ts:17",{"_index":189,"title":{},"body":{"injectables/HttpMovideskProvider.html":{}}}],["src/modules/shared/providers/interfaces/igrowatt",{"_index":389,"title":{},"body":{"injectables/UpdateOSSService.html":{},"injectables/UpdateV2Service.html":{}}}],["src/modules/shared/providers/interfaces/igrowatt.ts",{"_index":212,"title":{},"body":{"interfaces/IGrowatt.html":{},"coverage.html":{}}}],["src/modules/shared/providers/interfaces/igrowatt.ts:18",{"_index":213,"title":{},"body":{"interfaces/IGrowatt.html":{}}}],["src/modules/shared/providers/interfaces/igrowatt.ts:37",{"_index":242,"title":{},"body":{"interfaces/IGrowatt.html":{}}}],["src/modules/shared/providers/interfaces/imovideskt",{"_index":398,"title":{},"body":{"injectables/UpdateV2Service.html":{}}}],["src/modules/shared/providers/interfaces/imovideskt.ts",{"_index":270,"title":{},"body":{"interfaces/IMovidesk.html":{},"coverage.html":{}}}],["src/modules/shared/providers/interfaces/imovideskt.ts:2",{"_index":271,"title":{},"body":{"interfaces/IMovidesk.html":{}}}],["src/modules/shared/shared.module.ts",{"_index":283,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/modules/shared/utils/implementations/ticket.util.ts",{"_index":294,"title":{},"body":{"injectables/TicketUtil.html":{},"coverage.html":{}}}],["src/modules/shared/utils/implementations/ticket.util.ts:6",{"_index":297,"title":{},"body":{"injectables/TicketUtil.html":{}}}],["src/modules/shared/utils/implementations/ticket.util.ts:8",{"_index":295,"title":{},"body":{"injectables/TicketUtil.html":{}}}],["src/modules/shared/utils/interfaces/iticket.util",{"_index":399,"title":{},"body":{"injectables/UpdateV2Service.html":{}}}],["src/modules/shared/utils/interfaces/iticket.util.ts",{"_index":273,"title":{},"body":{"interfaces/ITicketUtil.html":{},"coverage.html":{}}}],["src/modules/shared/utils/interfaces/iticket.util.ts:2",{"_index":277,"title":{},"body":{"interfaces/ITicketUtil.html":{}}}],["src/modules/update/controllers/update.controller.ts",{"_index":332,"title":{},"body":{"controllers/UpdateController.html":{},"coverage.html":{}}}],["src/modules/update/controllers/update.controller.ts:30",{"_index":339,"title":{},"body":{"controllers/UpdateController.html":{}}}],["src/modules/update/controllers/update.controller.ts:38",{"_index":345,"title":{},"body":{"controllers/UpdateController.html":{}}}],["src/modules/update/dtos/update_oss.dto.ts",{"_index":370,"title":{},"body":{"classes/UpdateOSSDTO.html":{},"coverage.html":{}}}],["src/modules/update/dtos/update_oss.dto.ts:13",{"_index":373,"title":{},"body":{"classes/UpdateOSSDTO.html":{}}}],["src/modules/update/dtos/update_oss.dto.ts:18",{"_index":375,"title":{},"body":{"classes/UpdateOSSDTO.html":{}}}],["src/modules/update/dtos/update_oss.dto.ts:8",{"_index":372,"title":{},"body":{"classes/UpdateOSSDTO.html":{}}}],["src/modules/update/services/update_oss.service.ts",{"_index":381,"title":{},"body":{"injectables/UpdateOSSService.html":{},"coverage.html":{}}}],["src/modules/update/services/update_oss.service.ts:12",{"_index":387,"title":{},"body":{"injectables/UpdateOSSService.html":{}}}],["src/modules/update/services/update_oss.service.ts:6",{"_index":384,"title":{},"body":{"injectables/UpdateOSSService.html":{}}}],["src/modules/update/services/update_v2.service.ts",{"_index":392,"title":{},"body":{"injectables/UpdateV2Service.html":{},"coverage.html":{}}}],["src/modules/update/services/update_v2.service.ts:17",{"_index":396,"title":{},"body":{"injectables/UpdateV2Service.html":{}}}],["src/modules/update/services/update_v2.service.ts:8",{"_index":394,"title":{},"body":{"injectables/UpdateV2Service.html":{}}}],["src/modules/update/update.module.ts",{"_index":366,"title":{},"body":{"modules/UpdateModule.html":{}}}],["start",{"_index":478,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":481,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":483,"title":{},"body":{"index.html":{}}}],["started",{"_index":459,"title":{"index.html":{}},"body":{}}],["starter",{"_index":470,"title":{},"body":{"index.html":{}}}],["statements",{"_index":407,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":104,"title":{},"body":{"classes/ExceptionFilterHttp.html":{}}}],["statuscode",{"_index":107,"title":{},"body":{"classes/ExceptionFilterHttp.html":{}}}],["stay",{"_index":506,"title":{},"body":{"index.html":{}}}],["string",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/HttpGrowattProvider.html":{},"injectables/HttpMovideskProvider.html":{},"interfaces/IGrowatt.html":{},"interfaces/IMovidesk.html":{},"controllers/UpdateController.html":{},"classes/UpdateOSSDTO.html":{}}}],["string(resolver?.response?.headers['content",{"_index":135,"title":{},"body":{"classes/ExceptionFilterHttp.html":{}}}],["substituição",{"_index":255,"title":{},"body":{"interfaces/IGrowatt.html":{}}}],["sucesso",{"_index":224,"title":{},"body":{"interfaces/IGrowatt.html":{}}}],["super",{"_index":208,"title":{},"body":{"classes/HttpResponseException.html":{}}}],["support",{"_index":497,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":517,"title":{},"body":{"modules.html":{}}}],["série",{"_index":253,"title":{},"body":{"interfaces/IGrowatt.html":{}}}],["table",{"_index":422,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":421,"title":{},"body":{"coverage.html":{}}}],["tem",{"_index":238,"title":{},"body":{"interfaces/IGrowatt.html":{}}}],["temo",{"_index":257,"title":{},"body":{"interfaces/IGrowatt.html":{}}}],["test",{"_index":486,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":489,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":488,"title":{},"body":{"index.html":{}}}],["tests",{"_index":485,"title":{},"body":{"index.html":{}}}],["text",{"_index":319,"title":{},"body":{"injectables/TicketUtil.html":{}}}],["thanks",{"_index":495,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":29,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authenticate",{"_index":175,"title":{},"body":{"injectables/HttpGrowattProvider.html":{}}}],["this.base_url",{"_index":177,"title":{},"body":{"injectables/HttpGrowattProvider.html":{},"injectables/HttpMovideskProvider.html":{}}}],["this.growattprovider.updateoss",{"_index":391,"title":{},"body":{"injectables/UpdateOSSService.html":{},"injectables/UpdateV2Service.html":{}}}],["this.httpadapter",{"_index":97,"title":{},"body":{"classes/ExceptionFilterHttp.html":{}}}],["this.httpadapter.reply(response",{"_index":128,"title":{},"body":{"classes/ExceptionFilterHttp.html":{}}}],["this.httpadapter.setheader",{"_index":114,"title":{},"body":{"classes/ExceptionFilterHttp.html":{}}}],["this.httpservice.get",{"_index":198,"title":{},"body":{"injectables/HttpMovideskProvider.html":{}}}],["this.httpservice.post",{"_index":176,"title":{},"body":{"injectables/HttpGrowattProvider.html":{}}}],["this.httpservice.post(this.base_url",{"_index":170,"title":{},"body":{"injectables/HttpGrowattProvider.html":{}}}],["this.logger.debug('custom",{"_index":310,"title":{},"body":{"injectables/TicketUtil.html":{}}}],["this.logger.debug('data",{"_index":202,"title":{},"body":{"injectables/HttpMovideskProvider.html":{}}}],["this.logger.error('exception",{"_index":129,"title":{},"body":{"classes/ExceptionFilterHttp.html":{}}}],["this.movideskprovider.getticket(id",{"_index":402,"title":{},"body":{"injectables/UpdateV2Service.html":{}}}],["this.response",{"_index":209,"title":{},"body":{"classes/HttpResponseException.html":{}}}],["this.ticketutil.findfields(customfieldvalues",{"_index":403,"title":{},"body":{"injectables/UpdateV2Service.html":{}}}],["this.updateossservice.execute(data",{"_index":359,"title":{},"body":{"controllers/UpdateController.html":{}}}],["this.updatev2service.execute(id",{"_index":362,"title":{},"body":{"controllers/UpdateController.html":{}}}],["throw",{"_index":172,"title":{},"body":{"injectables/HttpGrowattProvider.html":{},"injectables/HttpMovideskProvider.html":{}}}],["ticket",{"_index":293,"title":{},"body":{"modules/SharedModule.html":{}}}],["ticket.return",{"_index":279,"title":{},"body":{"interfaces/ITicketUtil.html":{},"injectables/TicketUtil.html":{}}}],["tickets",{"_index":454,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ticketutil",{"_index":282,"title":{"injectables/TicketUtil.html":{}},"body":{"modules/SharedModule.html":{},"injectables/TicketUtil.html":{},"injectables/UpdateV2Service.html":{},"coverage.html":{},"overview.html":{}}}],["time",{"_index":153,"title":{},"body":{"injectables/HttpGrowattProvider.html":{},"interfaces/IGrowatt.html":{},"classes/UpdateOSSDTO.html":{},"injectables/UpdateOSSService.html":{}}}],["token",{"_index":185,"title":{},"body":{"injectables/HttpMovideskProvider.html":{},"interfaces/IGrowatt.html":{}}}],["token=${obj",{"_index":179,"title":{},"body":{"injectables/HttpGrowattProvider.html":{}}}],["token=${this.token",{"_index":200,"title":{},"body":{"injectables/HttpMovideskProvider.html":{}}}],["touch",{"_index":507,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":429,"title":{},"body":{"dependencies.html":{}}}],["try",{"_index":168,"title":{},"body":{"injectables/HttpGrowattProvider.html":{},"injectables/HttpMovideskProvider.html":{}}}],["twitter",{"_index":513,"title":{},"body":{"index.html":{}}}],["type",{"_index":80,"title":{},"body":{"classes/ExceptionFilterHttp.html":{},"injectables/HttpGrowattProvider.html":{},"injectables/HttpMovideskProvider.html":{},"classes/HttpResponseException.html":{},"interfaces/IGrowatt.html":{},"interfaces/IMovidesk.html":{},"interfaces/ITicketUtil.html":{},"injectables/TicketUtil.html":{},"controllers/UpdateController.html":{},"classes/UpdateOSSDTO.html":{},"injectables/UpdateOSSService.html":{},"injectables/UpdateV2Service.html":{},"coverage.html":{}}}],["type']).match",{"_index":136,"title":{},"body":{"classes/ExceptionFilterHttp.html":{}}}],["typescript",{"_index":469,"title":{},"body":{"index.html":{}}}],["unit",{"_index":484,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":342,"title":{},"body":{"controllers/UpdateController.html":{},"injectables/UpdateOSSService.html":{},"injectables/UpdateV2Service.html":{}}}],["unlicensed",{"_index":524,"title":{},"body":{"properties.html":{}}}],["unproccessable",{"_index":123,"title":{},"body":{"classes/ExceptionFilterHttp.html":{}}}],["update",{"_index":334,"title":{},"body":{"controllers/UpdateController.html":{}}}],["updatecontroller",{"_index":331,"title":{"controllers/UpdateController.html":{}},"body":{"controllers/UpdateController.html":{},"modules/UpdateModule.html":{},"coverage.html":{}}}],["updatemodule",{"_index":40,"title":{"modules/UpdateModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UpdateModule.html":{},"modules.html":{},"overview.html":{}}}],["updateoss",{"_index":63,"title":{},"body":{"injectables/AppService.html":{},"injectables/HttpGrowattProvider.html":{},"interfaces/IGrowatt.html":{},"controllers/UpdateController.html":{}}}],["updateoss(@body",{"_index":358,"title":{},"body":{"controllers/UpdateController.html":{}}}],["updateoss(data",{"_index":336,"title":{},"body":{"controllers/UpdateController.html":{}}}],["updateoss(newserialnumber",{"_index":151,"title":{},"body":{"injectables/HttpGrowattProvider.html":{},"interfaces/IGrowatt.html":{}}}],["updateossdto",{"_index":337,"title":{"classes/UpdateOSSDTO.html":{}},"body":{"controllers/UpdateController.html":{},"classes/UpdateOSSDTO.html":{},"injectables/UpdateOSSService.html":{},"coverage.html":{}}}],["updateossservice",{"_index":350,"title":{"injectables/UpdateOSSService.html":{}},"body":{"controllers/UpdateController.html":{},"modules/UpdateModule.html":{},"injectables/UpdateOSSService.html":{},"coverage.html":{},"overview.html":{}}}],["updateossv2",{"_index":335,"title":{},"body":{"controllers/UpdateController.html":{}}}],["updateossv2(@body",{"_index":361,"title":{},"body":{"controllers/UpdateController.html":{}}}],["updateossv2(id",{"_index":343,"title":{},"body":{"controllers/UpdateController.html":{}}}],["updatev2service",{"_index":352,"title":{"injectables/UpdateV2Service.html":{}},"body":{"controllers/UpdateController.html":{},"modules/UpdateModule.html":{},"injectables/UpdateV2Service.html":{},"coverage.html":{},"overview.html":{}}}],["useclass",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["utils/implementations/ticket.util",{"_index":289,"title":{},"body":{"modules/SharedModule.html":{}}}],["v1/tickets",{"_index":455,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["validator",{"_index":380,"title":{},"body":{"classes/UpdateOSSDTO.html":{},"dependencies.html":{}}}],["value",{"_index":85,"title":{},"body":{"classes/ExceptionFilterHttp.html":{},"injectables/HttpGrowattProvider.html":{},"injectables/HttpMovideskProvider.html":{},"injectables/TicketUtil.html":{},"injectables/UpdateV2Service.html":{},"miscellaneous/enumerations.html":{}}}],["values",{"_index":312,"title":{},"body":{"injectables/TicketUtil.html":{}}}],["version",{"_index":348,"title":{},"body":{"controllers/UpdateController.html":{},"properties.html":{}}}],["version('1",{"_index":355,"title":{},"body":{"controllers/UpdateController.html":{}}}],["version('1')@httpcode(200)@apitags('update')@post",{"_index":338,"title":{},"body":{"controllers/UpdateController.html":{}}}],["version('2",{"_index":360,"title":{},"body":{"controllers/UpdateController.html":{}}}],["version('2')@httpcode(200)@apitags('update')@post",{"_index":344,"title":{},"body":{"controllers/UpdateController.html":{}}}],["watch",{"_index":479,"title":{},"body":{"index.html":{}}}],["website",{"_index":511,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":500,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/UpdateModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiTags('Main')@Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @ApiTags('Main')\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nSharedModule\n\nSharedModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nUpdateModule\n\nUpdateModule\n\nAppModule -->\n\nUpdateModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                        \n                            UpdateModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { UpdateModule } from './modules/update/update.module';\nimport { SharedModule } from './modules/shared/shared.module';\nimport { ClassSerializerInterceptor, Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { APP_FILTER, APP_INTERCEPTOR } from '@nestjs/core';\nimport { ExceptionFilterHttp } from './core/filter/exception_http.filter';\n\n@Module({\n  imports: [UpdateModule, SharedModule],\n  controllers: [AppController],\n  providers: [\n    AppService,\n    {\n      provide: APP_FILTER,\n      useClass: ExceptionFilterHttp,\n    },\n    {\n      provide: APP_INTERCEPTOR,\n      useClass: ClassSerializerInterceptor,\n    },\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'AnyGrid - UpdateOSS';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExceptionFilterHttp.html":{"url":"classes/ExceptionFilterHttp.html","title":"class - ExceptionFilterHttp","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExceptionFilterHttp\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/filter/exception_http.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                httpAdapter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(adapterHost: HttpAdapterHost)\n                    \n                \n                        \n                            \n                                Defined in src/core/filter/exception_http.filter.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        adapterHost\n                                                  \n                                                        \n                                                                    HttpAdapterHost\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        httpAdapter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AbstractHttpAdapter\n\n                    \n                \n                    \n                        \n                                Defined in src/core/filter/exception_http.filter.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(ExceptionFilterHttp.name)\n                    \n                \n                    \n                        \n                                Defined in src/core/filter/exception_http.filter.ts:13\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: any, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/core/filter/exception_http.filter.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Catch,\n  ExceptionFilter,\n  ArgumentsHost,\n  BadRequestException,\n  Logger,\n} from '@nestjs/common';\nimport { AbstractHttpAdapter, HttpAdapterHost } from '@nestjs/core';\nimport { HttpResponseException } from '../http/HttpException';\n\n@Catch()\nexport class ExceptionFilterHttp implements ExceptionFilter {\n  protected logger = new Logger(ExceptionFilterHttp.name);\n  private httpAdapter: AbstractHttpAdapter;\n\n  constructor(private readonly adapterHost: HttpAdapterHost) {\n    this.httpAdapter = adapterHost.httpAdapter;\n  }\n\n  catch(exception: any, host: ArgumentsHost) {\n    const contextHttp = host.switchToHttp();\n    const response = contextHttp.getResponse();\n\n    const status = 500;\n    const body = {\n      statusCode: status,\n      data: 'Request not completed',\n      error: 'Internal Server Error',\n    };\n\n    this.httpAdapter.setHeader(\n      response,\n      'Content-Type',\n      'application/json; charset=uft-8',\n    );\n\n    if (exception instanceof BadRequestException) {\n      const resolver = exception as any;\n      const status = 422;\n      const body = {\n        statusCode: status,\n        data: resolver.getResponse(),\n        error: 'Unproccessable Entity',\n      };\n      delete body.data.statusCode;\n      delete body.data.error;\n      return this.httpAdapter.reply(response, body, status);\n    }\n\n    if (exception instanceof HttpResponseException) {\n      this.logger.error('exception', exception);\n      const resolver: Core.Error = exception as any;\n\n      const status = resolver?.response?.status;\n      const body = {\n        statusCode: status,\n        data: resolver?.response?.data,\n        error: resolver?.response?.statusText,\n      };\n      console.log(resolver?.response?.data);\n      if (\n        String(resolver?.response?.headers['content-type']).match(\n          new RegExp('html'),\n        )\n      ) {\n        body.data =\n          'Request body cannot be processed, content type is not accepted.';\n      }\n\n      return this.httpAdapter.reply(response, body, status);\n    }\n\n    return this.httpAdapter.reply(response, body, status);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpGrowattProvider.html":{"url":"injectables/HttpGrowattProvider.html","title":"injectable - HttpGrowattProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HttpGrowattProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/shared/providers/http/http.growatt.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                base_url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                authenticate\n                            \n                            \n                                    Async\n                                updateOSS\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpService: HttpService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/shared/providers/http/http.growatt.provider.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        authenticate\n                        \n                    \n                \n            \n            \n                \n                    \n                    authenticate()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/shared/providers/http/http.growatt.provider.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateOSS\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOSS(newSerialNumber: string, oldSerialNumber: string, time: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/shared/providers/http/http.growatt.provider.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newSerialNumber\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    oldSerialNumber\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    time\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        base_url\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.GROWATT_URL\n                    \n                \n                    \n                        \n                                Defined in src/modules/shared/providers/http/http.growatt.provider.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpService } from '@nestjs/axios';\nimport { Injectable } from '@nestjs/common';\nimport { lastValueFrom } from 'rxjs';\nimport { IGrowatt } from '../interfaces/igrowatt';\nimport { GrowattConstant } from '../../constants/growatt.constant';\nimport * as moment from 'moment';\nimport { config } from 'dotenv';\nimport { HttpResponseException } from 'src/core/http/HttpException';\nconfig();\n\n@Injectable()\nexport class HttpGrowattProvider implements IGrowatt {\n  protected readonly base_url = process.env.GROWATT_URL;\n\n  constructor(private readonly httpService: HttpService) {}\n\n  async authenticate(): Promise {\n    try {\n      const { data } = await lastValueFrom(\n        this.httpService.post(this.base_url + GrowattConstant.GET_OSS_TOKEN),\n      );\n      return data;\n    } catch (error) {\n      throw new HttpResponseException(error);\n    }\n  }\n\n  async updateOSS(\n    newSerialNumber: string,\n    oldSerialNumber: string,\n    time: string,\n  ): Promise {\n    try {\n      const { obj } = await this.authenticate();\n      const { data } = await lastValueFrom(\n        this.httpService.post(\n          this.base_url + GrowattConstant.BX_CHANGE_APP + `?token=${obj}`,\n          {\n            newSerialNumber,\n            oldSerialNumber,\n            time: moment(time).format('%y-%m-%d'),\n          },\n        ),\n      );\n      return data;\n    } catch (error) {\n      throw new HttpResponseException(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpMovideskProvider.html":{"url":"injectables/HttpMovideskProvider.html","title":"injectable - HttpMovideskProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HttpMovideskProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/shared/providers/http/http.movidesk.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                base_url\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                    Readonly\n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getTicket\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpService: HttpService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/shared/providers/http/http.movidesk.provider.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getTicket\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTicket(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/shared/providers/http/http.movidesk.provider.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        base_url\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.MOVIDESK_URL\n                    \n                \n                    \n                        \n                                Defined in src/modules/shared/providers/http/http.movidesk.provider.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(HttpMovideskProvider.name)\n                    \n                \n                    \n                        \n                                Defined in src/modules/shared/providers/http/http.movidesk.provider.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.MOVIDESK_TOKEN\n                    \n                \n                    \n                        \n                                Defined in src/modules/shared/providers/http/http.movidesk.provider.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpService } from '@nestjs/axios';\nimport { Injectable, Logger } from '@nestjs/common';\nimport { lastValueFrom } from 'rxjs';\nimport { HttpResponseException } from 'src/core/http/HttpException';\nimport { MovideskConstant } from '../../constants/movidesk.constant';\nimport { config } from 'dotenv';\nconfig();\n\n@Injectable()\nexport class HttpMovideskProvider {\n  protected logger = new Logger(HttpMovideskProvider.name);\n  protected readonly base_url = process.env.MOVIDESK_URL;\n  protected readonly token = process.env.MOVIDESK_TOKEN;\n\n  constructor(private readonly httpService: HttpService) {}\n\n  async getTicket(id: string): Promise {\n    try {\n      const { data } = await lastValueFrom(\n        this.httpService.get(\n          this.base_url +\n            MovideskConstant.TICKETS +\n            `?token=${this.token}` +\n            `&id=${id}`,\n        ),\n      );\n      this.logger.debug('data', data);\n      return data;\n    } catch (error) {\n      throw new HttpResponseException(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpResponseException.html":{"url":"classes/HttpResponseException.html","title":"class - HttpResponseException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpResponseException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/http/HttpException.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Error\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                response\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: Core.Error)\n                    \n                \n                        \n                            \n                                Defined in src/core/http/HttpException.ts:2\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                    Core.Error\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        response\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Core.Response\n\n                    \n                \n                    \n                        \n                                Defined in src/core/http/HttpException.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class HttpResponseException extends Error {\n  private response: Core.Response;\n\n  constructor({ response }: Core.Error) {\n    super();\n    this.response = response;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IGrowatt.html":{"url":"interfaces/IGrowatt.html","title":"interface - IGrowatt","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IGrowatt\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/shared/providers/interfaces/igrowatt.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        authenticate\n                                    \n                                \n                                \n                                    \n                                        updateOSS\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        authenticate\n                        \n                    \n                \n            \n            \n                \nauthenticate()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/shared/providers/interfaces/igrowatt.ts:18\n                \n            \n\n\n            \n                \n                    Método de Autenticação\nObter porta de token\n{\n \"result\":0, // 0 indica obter resultado com sucesso\n  \"msg\":\"The token will expire after 15 minutes!\",\n  \"obj\":\"fjj39oa47ir3669vh8m54rpk49lf55ll\"\n}\nde Obj o token de autenticação.\n\n                    \n                        Example :\n                        \n                            {\n &quot;result&quot;:0, // 0 indica obter resultado com sucesso\n  &quot;msg&quot;:&quot;The token will expire after 15 minutes!&quot;,\n  &quot;obj&quot;:&quot;fjj39oa47ir3669vh8m54rpk49lf55ll&quot;\n}\n                        \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Está função tem como retorno no parâmetro\nde Obj o token de autenticação.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateOSS\n                        \n                    \n                \n            \n            \n                \nupdateOSS(newSerialNumber: string, oldSerialNumber: string, time: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/shared/providers/interfaces/igrowatt.ts:37\n                \n            \n\n\n            \n                \n                    Método de Atualização\nReceba a porta de recebimento de informações de interface de câmbio/RMA brasileira.\n{\n\"result\":0,\n\"msg\":\"换机成功!\"\n}\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    newSerialNumber\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nNovo número de série\n\n\n                                    \n                                \n                                \n                                    oldSerialNumber\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nAntigo número de série\n\n\n                                    \n                                \n                                \n                                    time\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nData de substituição\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            {\n&quot;result&quot;:0,\n&quot;msg&quot;:&quot;换机成功!&quot;\n}\n                        \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Está função temo como retorno o resultado da operação.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface IGrowatt {\n  /**\n   *\n   * **Método de Autenticação**\n   *\n   * Obter porta de token\n   *\n   * @example\n   * {\n   *  \"result\":0, // 0 indica obter resultado com sucesso\n   *   \"msg\":\"The token will expire after 15 minutes!\",\n   *   \"obj\":\"fjj39oa47ir3669vh8m54rpk49lf55ll\"\n   * }\n   * @returns Está função tem como retorno no parâmetro\n   * de Obj o token de autenticação.\n   */\n\n  authenticate(): Promise;\n\n  /**\n   * **Método de Atualização**\n   *\n   * Receba a porta de recebimento de informações de interface de câmbio/RMA brasileira.\n   *\n   * @param newSerialNumber - Novo número de série\n   * @param oldSerialNumber - Antigo número de série\n   * @param time - Data de substituição\n   *\n   * @returns Está função temo como retorno o resultado da operação.\n   * @example\n   * {\n   * \"result\":0,\n   * \"msg\":\"换机成功!\"\n   * }\n   * @remark Obtenha o código de falha de retorno na descrição da falha na página inicial\n   */\n  updateOSS(\n    newSerialNumber: string,\n    oldSerialNumber: string,\n    time: string,\n  ): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMovidesk.html":{"url":"interfaces/IMovidesk.html","title":"interface - IMovidesk","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IMovidesk\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/shared/providers/interfaces/imovideskt.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getTicket\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getTicket\n                        \n                    \n                \n            \n            \n                \ngetTicket(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/shared/providers/interfaces/imovideskt.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface IMovidesk {\n  getTicket(id: string): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITicketUtil.html":{"url":"interfaces/ITicketUtil.html","title":"interface - ITicketUtil","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITicketUtil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/shared/utils/interfaces/iticket.util.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        findFields\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findFields\n                        \n                    \n                \n            \n            \n                \nfindFields(customFieldValues: Movidesk.CustomFieldValue[])\n                \n            \n\n\n            \n                \n                    Defined in src/modules/shared/utils/interfaces/iticket.util.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    customFieldValues\n                                    \n                                            Movidesk.CustomFieldValue[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Ticket.Return\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface ITicketUtil {\n  findFields(customFieldValues: Movidesk.CustomFieldValue[]): Ticket.Return;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_exports\n\n\n\n\n{\n    provide: , useClass: HttpGrowattProvider,\n} \n\n{\n    provide: , useClass: HttpGrowattProvider,\n} \n\n\n\n{\n    provide: , useClass: HttpMovideskProvider,\n} \n\n{\n    provide: , useClass: HttpMovideskProvider,\n} \n\n\n\n{\n    provide: , useClass: TicketUtil,\n} \n\n{\n    provide: , useClass: TicketUtil,\n} \n\n\n\nSharedModule\n\nSharedModule\n\n{\n    provide: , useClass: HttpGrowattProvider,\n}  -->\n\nSharedModule->{\n    provide: , useClass: HttpGrowattProvider,\n} \n\n\n\n{\n    provide: , useClass: HttpMovideskProvider,\n}  -->\n\nSharedModule->{\n    provide: , useClass: HttpMovideskProvider,\n} \n\n\n\n{\n    provide: , useClass: TicketUtil,\n}  -->\n\nSharedModule->{\n    provide: , useClass: TicketUtil,\n} \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/shared/shared.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Exports\n                    \n                        \n                            {\n    provide: , useClass: HttpGrowattProvider,\n}\n                        \n                        \n                            {\n    provide: , useClass: HttpMovideskProvider,\n}\n                        \n                        \n                            {\n    provide: , useClass: TicketUtil,\n}\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpModule } from '@nestjs/axios';\nimport { Module, Global } from '@nestjs/common';\nimport { HttpGrowattProvider } from './providers/http/http.growatt.provider';\nimport { HttpMovideskProvider } from './providers/http/http.movidesk.provider';\nimport { TicketUtil } from './utils/implementations/ticket.util';\n\n@Global()\n@Module({\n  imports: [HttpModule.register({})],\n  providers: [\n    {\n      provide: 'Growatt',\n      useClass: HttpGrowattProvider,\n    },\n    {\n      provide: 'Movidesk',\n      useClass: HttpMovideskProvider,\n    },\n    {\n      provide: 'Ticket',\n      useClass: TicketUtil,\n    },\n  ],\n  exports: [\n    {\n      provide: 'Growatt',\n      useClass: HttpGrowattProvider,\n    },\n    {\n      provide: 'Movidesk',\n      useClass: HttpMovideskProvider,\n    },\n    {\n      provide: 'Ticket',\n      useClass: TicketUtil,\n    },\n  ],\n})\nexport class SharedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TicketUtil.html":{"url":"injectables/TicketUtil.html","title":"injectable - TicketUtil","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TicketUtil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/shared/utils/implementations/ticket.util.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findFields\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findFields\n                        \n                    \n                \n            \n            \n                \nfindFields(customFieldValues: Movidesk.CustomFieldValue[])\n                \n            \n\n\n            \n                \n                    Defined in src/modules/shared/utils/implementations/ticket.util.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    customFieldValues\n                                    \n                                            Movidesk.CustomFieldValue[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Ticket.Return\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(TicketUtil.name)\n                    \n                \n                    \n                        \n                                Defined in src/modules/shared/utils/implementations/ticket.util.ts:6\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { ITicketUtil } from '../interfaces/iticket.util';\n\n@Injectable()\nexport class TicketUtil implements ITicketUtil {\n  protected logger = new Logger(TicketUtil.name);\n\n  findFields(customFieldValues: Movidesk.CustomFieldValue[]): Ticket.Return {\n    let obj: object = {};\n    let fieldFound: object = [];\n    const fieldsToBeFound = [\n      { id: 92408, value: 'snDamaged' },\n      { id: 103454, value: 'snFixedAnygrid' },\n      { id: 122405, value: 'snFixedTha' },\n      { id: 116301, value: 'dateIngressIntoStock' },\n    ];\n\n    this.logger.debug('Custom field values', customFieldValues);\n\n    customFieldValues.forEach((element) => {\n      fieldsToBeFound.forEach((item) => {\n        if (element.customFieldId === item.id) {\n          //CHECKING IF THE SIMPLE TEXT FIELDS HAS CONTENT\n          if (element?.value != null) {\n            fieldFound = { [item.value]: element.value };\n          }\n          //CHECKING IF THE CHOICE FIELDS HAS CONTENT\n          else if (element?.items[0]?.customFieldItem) {\n            fieldFound = { [item.value]: element.items[0].customFieldItem };\n          }\n          //IF VALUE IS NULL ASSIGN EMPTY TO THE PROPERTY\n          else if (\n            element?.value === null &&\n            !element?.items[0]?.customFieldItem\n          ) {\n            fieldFound = { [item.value]: '' };\n          }\n          obj = { ...obj, ...fieldFound };\n        }\n      });\n    });\n    return obj as Ticket.Return;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UpdateController.html":{"url":"controllers/UpdateController.html","title":"controller - UpdateController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UpdateController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/update/controllers/update.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                update\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                updateOSS\n                            \n                            \n                                    Async\n                                updateOSSv2\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateOSS\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOSS(data: UpdateOSSDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Version('1')@HttpCode(200)@ApiTags('Update')@Post()\n                \n            \n\n            \n                \n                    Defined in src/modules/update/controllers/update.controller.ts:30\n                \n            \n\n\n            \n                \n                    Rota de Atualização do Update OSS\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UpdateOSSDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateOSSv2\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOSSv2(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Version('2')@HttpCode(200)@ApiTags('Update')@Post()\n                \n            \n\n            \n                \n                    Defined in src/modules/update/controllers/update.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Post,\n  Body,\n  HttpCode,\n  Param,\n  Version,\n} from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { UpdateOSSDTO } from '../dtos/update_oss.dto';\nimport { UpdateOSSService } from '../services/update_oss.service';\nimport { UpdateV2Service } from '../services/update_v2.service';\n\n@Controller('update')\nexport class UpdateController {\n  constructor(\n    private readonly updateOSSService: UpdateOSSService,\n    private readonly updateV2Service: UpdateV2Service,\n  ) {}\n\n  /**\n   * **Rota de Atualização do Update OSS**\n   * @param data\n   * @returns\n   */\n  @Version('1')\n  @HttpCode(200)\n  @ApiTags('Update')\n  @Post()\n  async updateOSS(@Body() data: UpdateOSSDTO) {\n    return await this.updateOSSService.execute(data);\n  }\n\n  @Version('2')\n  @HttpCode(200)\n  @ApiTags('Update')\n  @Post()\n  async updateOSSv2(@Body() id: string) {\n    return await this.updateV2Service.execute(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UpdateModule.html":{"url":"modules/UpdateModule.html","title":"module - UpdateModule","body":"\n                   \n\n\n\n\n    Modules\n    UpdateModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UpdateModule\n\n\n\ncluster_UpdateModule_providers\n\n\n\ncluster_UpdateModule_imports\n\n\n\n\nSharedModule\n\nSharedModule\n\n\n\nUpdateModule\n\nUpdateModule\n\nUpdateModule -->\n\nSharedModule->UpdateModule\n\n\n\n\n\nUpdateOSSService\n\nUpdateOSSService\n\nUpdateModule -->\n\nUpdateOSSService->UpdateModule\n\n\n\n\n\nUpdateV2Service\n\nUpdateV2Service\n\nUpdateModule -->\n\nUpdateV2Service->UpdateModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/update/update.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UpdateOSSService\n                        \n                        \n                            UpdateV2Service\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UpdateController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*\nhttps://docs.nestjs.com/modules\n*/\n\nimport { Module } from '@nestjs/common';\nimport { SharedModule } from '../shared/shared.module';\nimport { UpdateController } from './controllers/update.controller';\nimport { UpdateOSSService } from './services/update_oss.service';\nimport { UpdateV2Service } from './services/update_v2.service';\n\n@Module({\n  imports: [SharedModule],\n  controllers: [UpdateController],\n  providers: [UpdateOSSService, UpdateV2Service],\n})\nexport class UpdateModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateOSSDTO.html":{"url":"classes/UpdateOSSDTO.html","title":"class - UpdateOSSDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateOSSDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/update/dtos/update_oss.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                newSerialNumber\n                            \n                            \n                                oldSerialNumber\n                            \n                            \n                                time\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        newSerialNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/update/dtos/update_oss.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        oldSerialNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/update/dtos/update_oss.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        time\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsDateString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/update/dtos/update_oss.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsDateString, IsNotEmpty, IsString } from 'class-validator';\n\nexport class UpdateOSSDTO {\n  @ApiProperty()\n  @IsString()\n  @IsNotEmpty()\n  newSerialNumber: string;\n\n  @ApiProperty()\n  @IsString()\n  @IsNotEmpty()\n  oldSerialNumber: string;\n\n  @ApiProperty()\n  @IsDateString()\n  @IsNotEmpty()\n  time: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UpdateOSSService.html":{"url":"injectables/UpdateOSSService.html","title":"injectable - UpdateOSSService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UpdateOSSService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/update/services/update_oss.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(growattProvider: IGrowatt)\n                    \n                \n                        \n                            \n                                Defined in src/modules/update/services/update_oss.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        growattProvider\n                                                  \n                                                        \n                                                                        IGrowatt\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(undefined: UpdateOSSDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/update/services/update_oss.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                UpdateOSSDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { IGrowatt } from 'src/modules/shared/providers/interfaces/igrowatt';\nimport { UpdateOSSDTO } from '../dtos/update_oss.dto';\n\n@Injectable()\nexport class UpdateOSSService {\n  constructor(\n    @Inject('Growatt')\n    private readonly growattProvider: IGrowatt,\n  ) {}\n\n  async execute({ newSerialNumber, oldSerialNumber, time }: UpdateOSSDTO) {\n    return await this.growattProvider.updateOSS(\n      newSerialNumber,\n      oldSerialNumber,\n      time,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UpdateV2Service.html":{"url":"injectables/UpdateV2Service.html","title":"injectable - UpdateV2Service","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UpdateV2Service\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/update/services/update_v2.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(movideskProvider: IMovidesk, growattProvider: IGrowatt, ticketUtil: ITicketUtil)\n                    \n                \n                        \n                            \n                                Defined in src/modules/update/services/update_v2.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        movideskProvider\n                                                  \n                                                        \n                                                                        IMovidesk\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        growattProvider\n                                                  \n                                                        \n                                                                        IGrowatt\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ticketUtil\n                                                  \n                                                        \n                                                                        ITicketUtil\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(undefined: any)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/update/services/update_v2.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(UpdateV2Service.name)\n                    \n                \n                    \n                        \n                                Defined in src/modules/update/services/update_v2.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Logger } from '@nestjs/common';\nimport { IGrowatt } from 'src/modules/shared/providers/interfaces/igrowatt';\nimport { IMovidesk } from 'src/modules/shared/providers/interfaces/imovideskt';\nimport { ITicketUtil } from 'src/modules/shared/utils/interfaces/iticket.util';\n\n@Injectable()\nexport class UpdateV2Service {\n  protected logger = new Logger(UpdateV2Service.name);\n\n  constructor(\n    @Inject('Movidesk') private readonly movideskProvider: IMovidesk,\n    @Inject('Growatt')\n    private readonly growattProvider: IGrowatt,\n    @Inject('Ticket') private readonly ticketUtil: ITicketUtil,\n  ) {}\n\n  async execute({ id }: any) {\n    const { customFieldValues } = await this.movideskProvider.getTicket(id);\n\n    const { snDamaged, snFixedAnygrid, dateIngressIntoStock } =\n      this.ticketUtil.findFields(customFieldValues);\n\n    return await this.growattProvider.updateOSS(\n      snDamaged,\n      snFixedAnygrid,\n      dateIngressIntoStock,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/core/filter/exception_http.filter.ts\n            \n            class\n            ExceptionFilterHttp\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/core/http/HttpException.ts\n            \n            class\n            HttpResponseException\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/shared/providers/http/http.growatt.provider.ts\n            \n            injectable\n            HttpGrowattProvider\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/shared/providers/http/http.movidesk.provider.ts\n            \n            injectable\n            HttpMovideskProvider\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/shared/providers/interfaces/igrowatt.ts\n            \n            interface\n            IGrowatt\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/modules/shared/providers/interfaces/imovideskt.ts\n            \n            interface\n            IMovidesk\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/shared/utils/implementations/ticket.util.ts\n            \n            injectable\n            TicketUtil\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/shared/utils/interfaces/iticket.util.ts\n            \n            interface\n            ITicketUtil\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/update/controllers/update.controller.ts\n            \n            controller\n            UpdateController\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/modules/update/dtos/update_oss.dto.ts\n            \n            class\n            UpdateOSSDTO\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/update/services/update_oss.service.ts\n            \n            injectable\n            UpdateOSSService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/update/services/update_v2.service.ts\n            \n            injectable\n            UpdateV2Service\n            \n                0 %\n                (0/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/axios : ^1.0.0\n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/swagger : ^6.1.3\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            compression : ^1.7.4\n        \n            dotenv : ^16.0.3\n        \n            helmet : ^6.0.1\n        \n            moment : ^2.29.4\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            GrowattConstant   (src/.../growatt.constant.ts)\n                        \n                        \n                            MovideskConstant   (src/.../movidesk.constant.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/shared/constants/growatt.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        GrowattConstant\n                    \n                \n                        \n                            \n                                 GET_OSS_TOKEN\n                            \n                        \n                        \n                            \n                                Value : /api/v3/supplySystem/getOssToken\n                            \n                        \n                        \n                            \n                                 BX_CHANGE_APP\n                            \n                        \n                        \n                            \n                                Value : /api/v3/supplySystem/bxChangeApplication\n                            \n                        \n            \n        \n\n    src/modules/shared/constants/movidesk.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        MovideskConstant\n                    \n                \n                        \n                            \n                                 TICKETS\n                            \n                        \n                        \n                            \n                                Value : /v1/tickets\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UpdateModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_UpdateModule\n\n\n\ncluster_UpdateModule_providers\n\n\n\n\nSharedModule\n\nSharedModule\n\n\n\nUpdateModule\n\nUpdateModule\n\nUpdateModule -->\n\nSharedModule->UpdateModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\n{\n    provide: , useClass: HttpGrowattProvider,\n} \n\n{\n    provide: , useClass: HttpGrowattProvider,\n} \n\n{\n    provide: , useClass: HttpGrowattProvider,\n}  -->\n\nSharedModule->{\n    provide: , useClass: HttpGrowattProvider,\n} \n\n\n\n\n\n{\n    provide: , useClass: HttpMovideskProvider,\n} \n\n{\n    provide: , useClass: HttpMovideskProvider,\n} \n\n{\n    provide: , useClass: HttpMovideskProvider,\n}  -->\n\nSharedModule->{\n    provide: , useClass: HttpMovideskProvider,\n} \n\n\n\n\n\n{\n    provide: , useClass: TicketUtil,\n} \n\n{\n    provide: , useClass: TicketUtil,\n} \n\n{\n    provide: , useClass: TicketUtil,\n}  -->\n\nSharedModule->{\n    provide: , useClass: TicketUtil,\n} \n\n\n\nAppModule -->\n\nUpdateModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nUpdateOSSService\n\nUpdateOSSService\n\nUpdateModule -->\n\nUpdateOSSService->UpdateModule\n\n\n\n\n\nUpdateV2Service\n\nUpdateV2Service\n\nUpdateModule -->\n\nUpdateV2Service->UpdateModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
